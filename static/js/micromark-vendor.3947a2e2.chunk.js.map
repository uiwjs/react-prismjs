{"version":3,"sources":["../node_modules/micromark/dist/character/markdown-line-ending.js","../node_modules/micromark/dist/tokenize/factory-space.js","../node_modules/micromark/dist/character/markdown-space.js","../node_modules/micromark/dist/util/chunked-splice.js","../node_modules/micromark/dist/character/markdown-line-ending-or-space.js","../node_modules/micromark/dist/util/regex-check.js","../node_modules/micromark/dist/util/shallow.js","../node_modules/micromark/dist/constant/assign.js","../node_modules/micromark/dist/util/prefix-size.js","../node_modules/micromark/dist/character/ascii-alphanumeric.js","../node_modules/micromark/dist/constant/from-char-code.js","../node_modules/micromark/dist/tokenize/partial-blank-line.js","../node_modules/micromark/dist/util/resolve-all.js","../node_modules/micromark/dist/character/ascii-alpha.js","../node_modules/micromark/dist/util/normalize-identifier.js","../node_modules/micromark/dist/util/miniflat.js","../node_modules/micromark/dist/util/chunked-push.js","../node_modules/micromark/dist/character/unicode-punctuation.js","../node_modules/micromark/dist/character/unicode-whitespace.js","../node_modules/micromark/dist/character/ascii-control.js","../node_modules/micromark/dist/tokenize/label-end.js","../node_modules/micromark/dist/constant/has-own-property.js","../node_modules/micromark/dist/util/size-chunks.js","../node_modules/micromark/dist/util/subtokenize.js","../node_modules/micromark/dist/initialize/text.js","../node_modules/micromark/dist/util/combine-extensions.js","../node_modules/micromark/dist/util/classify-character.js","../node_modules/micromark/dist/character/ascii-digit.js","../node_modules/micromark/dist/tokenize/factory-destination.js","../node_modules/micromark/dist/tokenize/factory-label.js","../node_modules/micromark/dist/tokenize/factory-whitespace.js","../node_modules/micromark/dist/tokenize/factory-title.js","../node_modules/micromark/dist/tokenize/thematic-break.js","../node_modules/micromark/dist/util/safe-from-int.js","../node_modules/micromark/dist/parse.js","../node_modules/micromark/dist/initialize/content.js","../node_modules/micromark/dist/initialize/document.js","../node_modules/micromark/dist/initialize/flow.js","../node_modules/micromark/dist/tokenize/content.js","../node_modules/micromark/dist/constant/splice.js","../node_modules/micromark/dist/util/create-tokenizer.js","../node_modules/micromark/dist/util/serialize-chunks.js","../node_modules/micromark/dist/util/slice-chunks.js","../node_modules/micromark/dist/constructs.js","../node_modules/micromark/dist/tokenize/attention.js","../node_modules/micromark/dist/constant/unicode-punctuation-regex.js","../node_modules/micromark/dist/util/move-point.js","../node_modules/micromark/dist/tokenize/autolink.js","../node_modules/micromark/dist/character/ascii-atext.js","../node_modules/micromark/dist/tokenize/block-quote.js","../node_modules/micromark/dist/tokenize/character-escape.js","../node_modules/micromark/dist/character/ascii-punctuation.js","../node_modules/micromark/dist/tokenize/character-reference.js","../node_modules/micromark/dist/character/ascii-hex-digit.js","../node_modules/micromark/dist/tokenize/code-fenced.js","../node_modules/micromark/dist/tokenize/code-indented.js","../node_modules/micromark/dist/tokenize/code-text.js","../node_modules/micromark/dist/tokenize/definition.js","../node_modules/micromark/dist/tokenize/hard-break-escape.js","../node_modules/micromark/dist/tokenize/heading-atx.js","../node_modules/micromark/dist/tokenize/html-flow.js","../node_modules/micromark/dist/constant/html-block-names.js","../node_modules/micromark/dist/constant/html-raw-names.js","../node_modules/micromark/dist/tokenize/html-text.js","../node_modules/micromark/dist/tokenize/label-start-image.js","../node_modules/micromark/dist/tokenize/label-start-link.js","../node_modules/micromark/dist/tokenize/line-ending.js","../node_modules/micromark/dist/tokenize/list.js","../node_modules/micromark/dist/tokenize/setext-underline.js","../node_modules/micromark/dist/preprocess.js","../node_modules/micromark/dist/postprocess.js"],"names":["module","exports","code","markdownSpace","require","effects","ok","type","max","limit","Infinity","size","enter","prefix","consume","exit","splice","list","start","remove","items","parameters","end","length","chunkStart","Array","from","unshift","apply","slice","fromCharCode","regex","test","assign","object","Object","sizeChunks","events","tail","sliceStream","asciiAlphanumeric","regexCheck","String","markdownLineEnding","factorySpace","partialBlankLine","tokenize","nok","partial","constructs","context","resolve","called","index","resolveAll","indexOf","push","asciiAlpha","value","replace","toLowerCase","toUpperCase","undefined","chunkedSplice","unicodePunctuationRegex","unicodePunctuation","unicodeWhitespace","markdownLineEndingOrSpace","chunkedPush","normalizeIdentifier","shallow","factoryDestination","factoryLabel","factoryTitle","factoryWhitespace","labelEnd","name","labelStart","defined","self","this","_balanced","_inactive","balanced","parser","sliceSerialize","now","afterLabelEnd","attempt","resourceConstruct","fullReferenceConstruct","collapsedReferenceConstruct","resolveTo","group","label","text","token","open","close","media","offset","insideSpan","null","_used","destinationAfter","between","call","afterLabel","own","hasOwnProperty","chunks","subcontent","eventIndex","stream","previous","entered","adjust","startPosition","startPositions","tokenizer","_tokenizer","contentType","childEvents","jumps","gaps","next","defineSkip","isInFirstContentOfListItem","_gfmTasklistFirstContentOfListItem","write","line","add","pop","event","lineIndex","otherIndex","otherEvent","subevents","more","_container","_movePreviousLineEndings","defineProperty","initializeFactory","string","resolver","createResolver","field","notText","atBreak","data","resolveAllLineSuffixes","extraResolver","chunk","bufferIndex","tabs","charCodeAt","column","_index","_bufferIndex","miniflat","extension","all","hook","left","right","existing","before","extensions","asciiDigit","asciiControl","literalType","literalMarkerType","rawType","stringType","balance","destinationEnclosedBefore","destinationRaw","destinationEnclosed","destinationEnclosedEscape","destinationRawEscape","markerType","labelEscape","seen","marker","atFirstTitleBreak","atTitleBreak","title","titleEscape","thematicBreak","sequence","base","parseInt","content","document","flow","combineExtensions","createTokenizer","options","concat","create","initializer","contentStart","contentInitial","lineStart","inspectResult","childFlow","childToken","stack","continued","inspectConstruct","subcontinued","inspectStart","containerState","continuation","inspectContinue","inspectLess","currentConstruct","concrete","flowContinue","inspectDone","interrupt","interruptible","containerConstruct","inspectFlowEnd","_closeFlow","lazy","lazyFlowConstruct","check","inspectLazy","flowEnd","documentContinue","documentContinued","flowStart","containerContinue","exitContainers","continueFlow","documentAfterPeek","disable","initial","flowInitial","afterConstruct","prefixSize","subtokenize","contentEnd","continuationConstruct","contentContinue","prefixed","serializeChunks","sliceChunks","initialize","point","columnStart","resolveAllConstructs","accountForPotentialSkip","fields","constructFactory","construct","info","addResult","onsuccessfulcheck","main","state","chunkIndex","go","restore","onreturn","returnState","bogusState","listOfConstructs","constructIndex","handleListOfConstructs","handleConstruct","startPoint","startPrevious","startCurrentConstruct","startEventsIndex","startStack","store","atTab","result","join","view","startIndex","startBufferIndex","endIndex","endBufferIndex","text$1","attention","autolink","blockQuote","characterEscape","characterReference","codeFenced","codeIndented","codeText","definition","hardBreakEscape","headingAtx","htmlFlow","htmlText","labelStartImage","labelStartLink","lineEnding","setextUnderline","42","43","45","48","49","50","51","52","53","54","55","56","57","62","91","32","35","60","61","95","96","126","38","92","33","93","classifyCharacter","movePoint","after","_open","_close","openingSequence","closingSequence","use","nextEvents","asciiAtext","schemeOrEmailAtext","emailAtext","schemeInsideOrEmailAtext","urlInside","emailAtSignOrDot","emailLabel","emailValue","asciiPunctuation","decodeEntity","asciiHexDigit","_interopDefaultLegacy","e","default","decodeEntity__default","numeric","closingFenceConstruct","closingSequenceStart","sizeOpen","closingSequenceEnd","initialPrefix","sequenceOpen","infoOpen","openAfter","infoAfter","meta","indentedContentConstruct","afterPrefix","gap","tailExitIndex","headEnterIndex","identifier","labelAfter","titleConstruct","fenceOpenInside","headingBreak","htmlBlockNames","htmlRawNames","kind","startTag","buffer","declarationStart","tagCloseStart","continuationDeclarationInside","tagName","commentOpenInside","cdataOpenInside","basicSelfClosing","completeAttributeNameBefore","completeClosingTagAfter","completeEnd","completeAttributeName","completeAttributeNameAfter","completeAttributeValueBefore","completeAttributeValueQuoted","completeAttributeValueUnquoted","completeAttributeValueQuotedAfter","completeAfter","continuationCommentInside","continuationRawTagOpen","continuationClose","continuationCharacterDataInside","continuationAtLineEnding","nextBlankConstruct","htmlContinueStart","done","continuationRawEndTag","declarationOpen","instruction","tagOpen","commentOpen","cdataOpen","declaration","commentStart","commentStartDash","comment","commentClose","atLineEnding","cdata","cdataClose","cdataEnd","instructionClose","tagClose","tagCloseBetween","tagOpenBetween","tagOpenAttributeName","tagOpenAttributeNameAfter","tagOpenAttributeValueBefore","tagOpenAttributeValueQuoted","tagOpenAttributeValueUnquoted","tagOpenAttributeValueQuotedAfter","initialSize","atMarker","inside","onBlank","listItemPrefixWhitespaceConstruct","endOfPrefix","otherPrefix","initialBlankLine","furtherBlankLines","notInCurrentItem","indentConstruct","paragraph","heading","search","atCarriageReturn","encoding","match","endPosition","toString","lastIndex","exec","Math","ceil"],"mappings":"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","file":"static/js/micromark-vendor.3947a2e2.chunk.js","sourcesContent":["'use strict'\n\nfunction markdownLineEnding(code) {\n  return code < -2\n}\n\nmodule.exports = markdownLineEnding\n","'use strict'\n\nvar markdownSpace = require('../character/markdown-space.js')\n\nfunction spaceFactory(effects, ok, type, max) {\n  var limit = max ? max - 1 : Infinity\n  var size = 0\n  return start\n\n  function start(code) {\n    if (markdownSpace(code)) {\n      effects.enter(type)\n      return prefix(code)\n    }\n\n    return ok(code)\n  }\n\n  function prefix(code) {\n    if (markdownSpace(code) && size++ < limit) {\n      effects.consume(code)\n      return prefix\n    }\n\n    effects.exit(type)\n    return ok(code)\n  }\n}\n\nmodule.exports = spaceFactory\n","'use strict'\n\nfunction markdownSpace(code) {\n  return code === -2 || code === -1 || code === 32\n}\n\nmodule.exports = markdownSpace\n","'use strict'\n\nvar splice = require('../constant/splice.js')\n\n// causes a stack overflow in V8 when trying to insert 100k items for instance.\n\nfunction chunkedSplice(list, start, remove, items) {\n  var end = list.length\n  var chunkStart = 0\n  var parameters // Make start between zero and `end` (included).\n\n  if (start < 0) {\n    start = -start > end ? 0 : end + start\n  } else {\n    start = start > end ? end : start\n  }\n\n  remove = remove > 0 ? remove : 0 // No need to chunk the items if there’s only a couple (10k) items.\n\n  if (items.length < 10000) {\n    parameters = Array.from(items)\n    parameters.unshift(start, remove)\n    splice.apply(list, parameters)\n  } else {\n    // Delete `remove` items starting from `start`\n    if (remove) splice.apply(list, [start, remove]) // Insert the items in chunks to not cause stack overflows.\n\n    while (chunkStart < items.length) {\n      parameters = items.slice(chunkStart, chunkStart + 10000)\n      parameters.unshift(start, 0)\n      splice.apply(list, parameters)\n      chunkStart += 10000\n      start += 10000\n    }\n  }\n}\n\nmodule.exports = chunkedSplice\n","'use strict'\n\nfunction markdownLineEndingOrSpace(code) {\n  return code < 0 || code === 32\n}\n\nmodule.exports = markdownLineEndingOrSpace\n","'use strict'\n\nvar fromCharCode = require('../constant/from-char-code.js')\n\nfunction regexCheck(regex) {\n  return check\n\n  function check(code) {\n    return regex.test(fromCharCode(code))\n  }\n}\n\nmodule.exports = regexCheck\n","'use strict'\n\nvar assign = require('../constant/assign.js')\n\nfunction shallow(object) {\n  return assign({}, object)\n}\n\nmodule.exports = shallow\n","'use strict'\n\nvar assign = Object.assign\n\nmodule.exports = assign\n","'use strict'\n\nvar sizeChunks = require('./size-chunks.js')\n\nfunction prefixSize(events, type) {\n  var tail = events[events.length - 1]\n  if (!tail || tail[1].type !== type) return 0\n  return sizeChunks(tail[2].sliceStream(tail[1]))\n}\n\nmodule.exports = prefixSize\n","'use strict'\n\nvar regexCheck = require('../util/regex-check.js')\n\nvar asciiAlphanumeric = regexCheck(/[\\dA-Za-z]/)\n\nmodule.exports = asciiAlphanumeric\n","'use strict'\n\nvar fromCharCode = String.fromCharCode\n\nmodule.exports = fromCharCode\n","'use strict'\n\nvar markdownLineEnding = require('../character/markdown-line-ending.js')\nvar factorySpace = require('./factory-space.js')\n\nvar partialBlankLine = {\n  tokenize: tokenizePartialBlankLine,\n  partial: true\n}\n\nfunction tokenizePartialBlankLine(effects, ok, nok) {\n  return factorySpace(effects, afterWhitespace, 'linePrefix')\n\n  function afterWhitespace(code) {\n    return code === null || markdownLineEnding(code) ? ok(code) : nok(code)\n  }\n}\n\nmodule.exports = partialBlankLine\n","'use strict'\n\nfunction resolveAll(constructs, events, context) {\n  var called = []\n  var index = -1\n  var resolve\n\n  while (++index < constructs.length) {\n    resolve = constructs[index].resolveAll\n\n    if (resolve && called.indexOf(resolve) < 0) {\n      events = resolve(events, context)\n      called.push(resolve)\n    }\n  }\n\n  return events\n}\n\nmodule.exports = resolveAll\n","'use strict'\n\nvar regexCheck = require('../util/regex-check.js')\n\nvar asciiAlpha = regexCheck(/[A-Za-z]/)\n\nmodule.exports = asciiAlpha\n","'use strict'\n\nfunction normalizeIdentifier(value) {\n  return (\n    value // Collapse Markdown whitespace.\n      .replace(/[\\t\\n\\r ]+/g, ' ') // Trim.\n      .replace(/^ | $/g, '') // Some characters are considered “uppercase”, but if their lowercase\n      // counterpart is uppercased will result in a different uppercase\n      // character.\n      // Hence, to get that form, we perform both lower- and uppercase.\n      // Upper case makes sure keys will not interact with default prototypal\n      // methods: no object method is uppercase.\n      .toLowerCase()\n      .toUpperCase()\n  )\n}\n\nmodule.exports = normalizeIdentifier\n","'use strict'\n\nfunction miniflat(value) {\n  return value === null || value === undefined\n    ? []\n    : 'length' in value\n    ? value\n    : [value]\n}\n\nmodule.exports = miniflat\n","'use strict'\n\nvar chunkedSplice = require('./chunked-splice.js')\n\nfunction chunkedPush(list, items) {\n  if (list.length) {\n    chunkedSplice(list, list.length, 0, items)\n    return list\n  }\n\n  return items\n}\n\nmodule.exports = chunkedPush\n","'use strict'\n\nvar unicodePunctuationRegex = require('../constant/unicode-punctuation-regex.js')\nvar regexCheck = require('../util/regex-check.js')\n\n// In fact adds to the bundle size.\n\nvar unicodePunctuation = regexCheck(unicodePunctuationRegex)\n\nmodule.exports = unicodePunctuation\n","'use strict'\n\nvar regexCheck = require('../util/regex-check.js')\n\nvar unicodeWhitespace = regexCheck(/\\s/)\n\nmodule.exports = unicodeWhitespace\n","'use strict'\n\n// Note: EOF is seen as ASCII control here, because `null < 32 == true`.\nfunction asciiControl(code) {\n  return (\n    // Special whitespace codes (which have negative values), C0 and Control\n    // character DEL\n    code < 32 || code === 127\n  )\n}\n\nmodule.exports = asciiControl\n","'use strict'\n\nvar markdownLineEndingOrSpace = require('../character/markdown-line-ending-or-space.js')\nvar chunkedPush = require('../util/chunked-push.js')\nvar chunkedSplice = require('../util/chunked-splice.js')\nvar normalizeIdentifier = require('../util/normalize-identifier.js')\nvar resolveAll = require('../util/resolve-all.js')\nvar shallow = require('../util/shallow.js')\nvar factoryDestination = require('./factory-destination.js')\nvar factoryLabel = require('./factory-label.js')\nvar factoryTitle = require('./factory-title.js')\nvar factoryWhitespace = require('./factory-whitespace.js')\n\nvar labelEnd = {\n  name: 'labelEnd',\n  tokenize: tokenizeLabelEnd,\n  resolveTo: resolveToLabelEnd,\n  resolveAll: resolveAllLabelEnd\n}\nvar resourceConstruct = {\n  tokenize: tokenizeResource\n}\nvar fullReferenceConstruct = {\n  tokenize: tokenizeFullReference\n}\nvar collapsedReferenceConstruct = {\n  tokenize: tokenizeCollapsedReference\n}\n\nfunction resolveAllLabelEnd(events) {\n  var index = -1\n  var token\n\n  while (++index < events.length) {\n    token = events[index][1]\n\n    if (\n      !token._used &&\n      (token.type === 'labelImage' ||\n        token.type === 'labelLink' ||\n        token.type === 'labelEnd')\n    ) {\n      // Remove the marker.\n      events.splice(index + 1, token.type === 'labelImage' ? 4 : 2)\n      token.type = 'data'\n      index++\n    }\n  }\n\n  return events\n}\n\nfunction resolveToLabelEnd(events, context) {\n  var index = events.length\n  var offset = 0\n  var group\n  var label\n  var text\n  var token\n  var open\n  var close\n  var media // Find an opening.\n\n  while (index--) {\n    token = events[index][1]\n\n    if (open) {\n      // If we see another link, or inactive link label, we’ve been here before.\n      if (\n        token.type === 'link' ||\n        (token.type === 'labelLink' && token._inactive)\n      ) {\n        break\n      } // Mark other link openings as inactive, as we can’t have links in\n      // links.\n\n      if (events[index][0] === 'enter' && token.type === 'labelLink') {\n        token._inactive = true\n      }\n    } else if (close) {\n      if (\n        events[index][0] === 'enter' &&\n        (token.type === 'labelImage' || token.type === 'labelLink') &&\n        !token._balanced\n      ) {\n        open = index\n\n        if (token.type !== 'labelLink') {\n          offset = 2\n          break\n        }\n      }\n    } else if (token.type === 'labelEnd') {\n      close = index\n    }\n  }\n\n  group = {\n    type: events[open][1].type === 'labelLink' ? 'link' : 'image',\n    start: shallow(events[open][1].start),\n    end: shallow(events[events.length - 1][1].end)\n  }\n  label = {\n    type: 'label',\n    start: shallow(events[open][1].start),\n    end: shallow(events[close][1].end)\n  }\n  text = {\n    type: 'labelText',\n    start: shallow(events[open + offset + 2][1].end),\n    end: shallow(events[close - 2][1].start)\n  }\n  media = [\n    ['enter', group, context],\n    ['enter', label, context]\n  ] // Opening marker.\n\n  media = chunkedPush(media, events.slice(open + 1, open + offset + 3)) // Text open.\n\n  media = chunkedPush(media, [['enter', text, context]]) // Between.\n\n  media = chunkedPush(\n    media,\n    resolveAll(\n      context.parser.constructs.insideSpan.null,\n      events.slice(open + offset + 4, close - 3),\n      context\n    )\n  ) // Text close, marker close, label close.\n\n  media = chunkedPush(media, [\n    ['exit', text, context],\n    events[close - 2],\n    events[close - 1],\n    ['exit', label, context]\n  ]) // Reference, resource, or so.\n\n  media = chunkedPush(media, events.slice(close + 1)) // Media close.\n\n  media = chunkedPush(media, [['exit', group, context]])\n  chunkedSplice(events, open, events.length, media)\n  return events\n}\n\nfunction tokenizeLabelEnd(effects, ok, nok) {\n  var self = this\n  var index = self.events.length\n  var labelStart\n  var defined // Find an opening.\n\n  while (index--) {\n    if (\n      (self.events[index][1].type === 'labelImage' ||\n        self.events[index][1].type === 'labelLink') &&\n      !self.events[index][1]._balanced\n    ) {\n      labelStart = self.events[index][1]\n      break\n    }\n  }\n\n  return start\n\n  function start(code) {\n    if (!labelStart) {\n      return nok(code)\n    } // It’s a balanced bracket, but contains a link.\n\n    if (labelStart._inactive) return balanced(code)\n    defined =\n      self.parser.defined.indexOf(\n        normalizeIdentifier(\n          self.sliceSerialize({\n            start: labelStart.end,\n            end: self.now()\n          })\n        )\n      ) > -1\n    effects.enter('labelEnd')\n    effects.enter('labelMarker')\n    effects.consume(code)\n    effects.exit('labelMarker')\n    effects.exit('labelEnd')\n    return afterLabelEnd\n  }\n\n  function afterLabelEnd(code) {\n    // Resource: `[asd](fgh)`.\n    if (code === 40) {\n      return effects.attempt(\n        resourceConstruct,\n        ok,\n        defined ? ok : balanced\n      )(code)\n    } // Collapsed (`[asd][]`) or full (`[asd][fgh]`) reference?\n\n    if (code === 91) {\n      return effects.attempt(\n        fullReferenceConstruct,\n        ok,\n        defined\n          ? effects.attempt(collapsedReferenceConstruct, ok, balanced)\n          : balanced\n      )(code)\n    } // Shortcut reference: `[asd]`?\n\n    return defined ? ok(code) : balanced(code)\n  }\n\n  function balanced(code) {\n    labelStart._balanced = true\n    return nok(code)\n  }\n}\n\nfunction tokenizeResource(effects, ok, nok) {\n  return start\n\n  function start(code) {\n    effects.enter('resource')\n    effects.enter('resourceMarker')\n    effects.consume(code)\n    effects.exit('resourceMarker')\n    return factoryWhitespace(effects, open)\n  }\n\n  function open(code) {\n    if (code === 41) {\n      return end(code)\n    }\n\n    return factoryDestination(\n      effects,\n      destinationAfter,\n      nok,\n      'resourceDestination',\n      'resourceDestinationLiteral',\n      'resourceDestinationLiteralMarker',\n      'resourceDestinationRaw',\n      'resourceDestinationString',\n      3\n    )(code)\n  }\n\n  function destinationAfter(code) {\n    return markdownLineEndingOrSpace(code)\n      ? factoryWhitespace(effects, between)(code)\n      : end(code)\n  }\n\n  function between(code) {\n    if (code === 34 || code === 39 || code === 40) {\n      return factoryTitle(\n        effects,\n        factoryWhitespace(effects, end),\n        nok,\n        'resourceTitle',\n        'resourceTitleMarker',\n        'resourceTitleString'\n      )(code)\n    }\n\n    return end(code)\n  }\n\n  function end(code) {\n    if (code === 41) {\n      effects.enter('resourceMarker')\n      effects.consume(code)\n      effects.exit('resourceMarker')\n      effects.exit('resource')\n      return ok\n    }\n\n    return nok(code)\n  }\n}\n\nfunction tokenizeFullReference(effects, ok, nok) {\n  var self = this\n  return start\n\n  function start(code) {\n    return factoryLabel.call(\n      self,\n      effects,\n      afterLabel,\n      nok,\n      'reference',\n      'referenceMarker',\n      'referenceString'\n    )(code)\n  }\n\n  function afterLabel(code) {\n    return self.parser.defined.indexOf(\n      normalizeIdentifier(\n        self.sliceSerialize(self.events[self.events.length - 1][1]).slice(1, -1)\n      )\n    ) < 0\n      ? nok(code)\n      : ok(code)\n  }\n}\n\nfunction tokenizeCollapsedReference(effects, ok, nok) {\n  return start\n\n  function start(code) {\n    effects.enter('reference')\n    effects.enter('referenceMarker')\n    effects.consume(code)\n    effects.exit('referenceMarker')\n    return open\n  }\n\n  function open(code) {\n    if (code === 93) {\n      effects.enter('referenceMarker')\n      effects.consume(code)\n      effects.exit('referenceMarker')\n      effects.exit('reference')\n      return ok\n    }\n\n    return nok(code)\n  }\n}\n\nmodule.exports = labelEnd\n","'use strict'\n\nvar own = {}.hasOwnProperty\n\nmodule.exports = own\n","'use strict'\n\n// Counts tabs based on their expanded size, and CR+LF as one character.\n\nfunction sizeChunks(chunks) {\n  var index = -1\n  var size = 0\n\n  while (++index < chunks.length) {\n    size += typeof chunks[index] === 'string' ? chunks[index].length : 1\n  }\n\n  return size\n}\n\nmodule.exports = sizeChunks\n","'use strict'\n\nvar assign = require('../constant/assign.js')\nvar chunkedSplice = require('./chunked-splice.js')\nvar shallow = require('./shallow.js')\n\nfunction subtokenize(events) {\n  var jumps = {}\n  var index = -1\n  var event\n  var lineIndex\n  var otherIndex\n  var otherEvent\n  var parameters\n  var subevents\n  var more\n\n  while (++index < events.length) {\n    while (index in jumps) {\n      index = jumps[index]\n    }\n\n    event = events[index] // Add a hook for the GFM tasklist extension, which needs to know if text\n    // is in the first content of a list item.\n\n    if (\n      index &&\n      event[1].type === 'chunkFlow' &&\n      events[index - 1][1].type === 'listItemPrefix'\n    ) {\n      subevents = event[1]._tokenizer.events\n      otherIndex = 0\n\n      if (\n        otherIndex < subevents.length &&\n        subevents[otherIndex][1].type === 'lineEndingBlank'\n      ) {\n        otherIndex += 2\n      }\n\n      if (\n        otherIndex < subevents.length &&\n        subevents[otherIndex][1].type === 'content'\n      ) {\n        while (++otherIndex < subevents.length) {\n          if (subevents[otherIndex][1].type === 'content') {\n            break\n          }\n\n          if (subevents[otherIndex][1].type === 'chunkText') {\n            subevents[otherIndex][1].isInFirstContentOfListItem = true\n            otherIndex++\n          }\n        }\n      }\n    } // Enter.\n\n    if (event[0] === 'enter') {\n      if (event[1].contentType) {\n        assign(jumps, subcontent(events, index))\n        index = jumps[index]\n        more = true\n      }\n    } // Exit.\n    else if (event[1]._container || event[1]._movePreviousLineEndings) {\n      otherIndex = index\n      lineIndex = undefined\n\n      while (otherIndex--) {\n        otherEvent = events[otherIndex]\n\n        if (\n          otherEvent[1].type === 'lineEnding' ||\n          otherEvent[1].type === 'lineEndingBlank'\n        ) {\n          if (otherEvent[0] === 'enter') {\n            if (lineIndex) {\n              events[lineIndex][1].type = 'lineEndingBlank'\n            }\n\n            otherEvent[1].type = 'lineEnding'\n            lineIndex = otherIndex\n          }\n        } else {\n          break\n        }\n      }\n\n      if (lineIndex) {\n        // Fix position.\n        event[1].end = shallow(events[lineIndex][1].start) // Switch container exit w/ line endings.\n\n        parameters = events.slice(lineIndex, index)\n        parameters.unshift(event)\n        chunkedSplice(events, lineIndex, index - lineIndex + 1, parameters)\n      }\n    }\n  }\n\n  return !more\n}\n\nfunction subcontent(events, eventIndex) {\n  var token = events[eventIndex][1]\n  var context = events[eventIndex][2]\n  var startPosition = eventIndex - 1\n  var startPositions = []\n  var tokenizer =\n    token._tokenizer || context.parser[token.contentType](token.start)\n  var childEvents = tokenizer.events\n  var jumps = []\n  var gaps = {}\n  var stream\n  var previous\n  var index\n  var entered\n  var end\n  var adjust // Loop forward through the linked tokens to pass them in order to the\n  // subtokenizer.\n\n  while (token) {\n    // Find the position of the event for this token.\n    while (events[++startPosition][1] !== token) {\n      // Empty.\n    }\n\n    startPositions.push(startPosition)\n\n    if (!token._tokenizer) {\n      stream = context.sliceStream(token)\n\n      if (!token.next) {\n        stream.push(null)\n      }\n\n      if (previous) {\n        tokenizer.defineSkip(token.start)\n      }\n\n      if (token.isInFirstContentOfListItem) {\n        tokenizer._gfmTasklistFirstContentOfListItem = true\n      }\n\n      tokenizer.write(stream)\n\n      if (token.isInFirstContentOfListItem) {\n        tokenizer._gfmTasklistFirstContentOfListItem = undefined\n      }\n    } // Unravel the next token.\n\n    previous = token\n    token = token.next\n  } // Now, loop back through all events (and linked tokens), to figure out which\n  // parts belong where.\n\n  token = previous\n  index = childEvents.length\n\n  while (index--) {\n    // Make sure we’ve at least seen something (final eol is part of the last\n    // token).\n    if (childEvents[index][0] === 'enter') {\n      entered = true\n    } else if (\n      // Find a void token that includes a break.\n      entered &&\n      childEvents[index][1].type === childEvents[index - 1][1].type &&\n      childEvents[index][1].start.line !== childEvents[index][1].end.line\n    ) {\n      add(childEvents.slice(index + 1, end))\n      // Help GC.\n      token._tokenizer = token.next = undefined\n      token = token.previous\n      end = index + 1\n    }\n  }\n\n  // Help GC.\n  tokenizer.events = token._tokenizer = token.next = undefined // Do head:\n\n  add(childEvents.slice(0, end))\n  index = -1\n  adjust = 0\n\n  while (++index < jumps.length) {\n    gaps[adjust + jumps[index][0]] = adjust + jumps[index][1]\n    adjust += jumps[index][1] - jumps[index][0] - 1\n  }\n\n  return gaps\n\n  function add(slice) {\n    var start = startPositions.pop()\n    jumps.unshift([start, start + slice.length - 1])\n    chunkedSplice(events, start, 2, slice)\n  }\n}\n\nmodule.exports = subtokenize\n","'use strict'\n\nObject.defineProperty(exports, '__esModule', {value: true})\n\nvar assign = require('../constant/assign.js')\nvar shallow = require('../util/shallow.js')\n\nvar text = initializeFactory('text')\nvar string = initializeFactory('string')\nvar resolver = {\n  resolveAll: createResolver()\n}\n\nfunction initializeFactory(field) {\n  return {\n    tokenize: initializeText,\n    resolveAll: createResolver(\n      field === 'text' ? resolveAllLineSuffixes : undefined\n    )\n  }\n\n  function initializeText(effects) {\n    var self = this\n    var constructs = this.parser.constructs[field]\n    var text = effects.attempt(constructs, start, notText)\n    return start\n\n    function start(code) {\n      return atBreak(code) ? text(code) : notText(code)\n    }\n\n    function notText(code) {\n      if (code === null) {\n        effects.consume(code)\n        return\n      }\n\n      effects.enter('data')\n      effects.consume(code)\n      return data\n    }\n\n    function data(code) {\n      if (atBreak(code)) {\n        effects.exit('data')\n        return text(code)\n      } // Data.\n\n      effects.consume(code)\n      return data\n    }\n\n    function atBreak(code) {\n      var list = constructs[code]\n      var index = -1\n\n      if (code === null) {\n        return true\n      }\n\n      if (list) {\n        while (++index < list.length) {\n          if (\n            !list[index].previous ||\n            list[index].previous.call(self, self.previous)\n          ) {\n            return true\n          }\n        }\n      }\n    }\n  }\n}\n\nfunction createResolver(extraResolver) {\n  return resolveAllText\n\n  function resolveAllText(events, context) {\n    var index = -1\n    var enter // A rather boring computation (to merge adjacent `data` events) which\n    // improves mm performance by 29%.\n\n    while (++index <= events.length) {\n      if (enter === undefined) {\n        if (events[index] && events[index][1].type === 'data') {\n          enter = index\n          index++\n        }\n      } else if (!events[index] || events[index][1].type !== 'data') {\n        // Don’t do anything if there is one data token.\n        if (index !== enter + 2) {\n          events[enter][1].end = events[index - 1][1].end\n          events.splice(enter + 2, index - enter - 2)\n          index = enter + 2\n        }\n\n        enter = undefined\n      }\n    }\n\n    return extraResolver ? extraResolver(events, context) : events\n  }\n} // A rather ugly set of instructions which again looks at chunks in the input\n// stream.\n// The reason to do this here is that it is *much* faster to parse in reverse.\n// And that we can’t hook into `null` to split the line suffix before an EOF.\n// To do: figure out if we can make this into a clean utility, or even in core.\n// As it will be useful for GFMs literal autolink extension (and maybe even\n// tables?)\n\nfunction resolveAllLineSuffixes(events, context) {\n  var eventIndex = -1\n  var chunks\n  var data\n  var chunk\n  var index\n  var bufferIndex\n  var size\n  var tabs\n  var token\n\n  while (++eventIndex <= events.length) {\n    if (\n      (eventIndex === events.length ||\n        events[eventIndex][1].type === 'lineEnding') &&\n      events[eventIndex - 1][1].type === 'data'\n    ) {\n      data = events[eventIndex - 1][1]\n      chunks = context.sliceStream(data)\n      index = chunks.length\n      bufferIndex = -1\n      size = 0\n      tabs = undefined\n\n      while (index--) {\n        chunk = chunks[index]\n\n        if (typeof chunk === 'string') {\n          bufferIndex = chunk.length\n\n          while (chunk.charCodeAt(bufferIndex - 1) === 32) {\n            size++\n            bufferIndex--\n          }\n\n          if (bufferIndex) break\n          bufferIndex = -1\n        } // Number\n        else if (chunk === -2) {\n          tabs = true\n          size++\n        } else if (chunk === -1);\n        else {\n          // Replacement character, exit.\n          index++\n          break\n        }\n      }\n\n      if (size) {\n        token = {\n          type:\n            eventIndex === events.length || tabs || size < 2\n              ? 'lineSuffix'\n              : 'hardBreakTrailing',\n          start: {\n            line: data.end.line,\n            column: data.end.column - size,\n            offset: data.end.offset - size,\n            _index: data.start._index + index,\n            _bufferIndex: index\n              ? bufferIndex\n              : data.start._bufferIndex + bufferIndex\n          },\n          end: shallow(data.end)\n        }\n        data.end = shallow(token.start)\n\n        if (data.start.offset === data.end.offset) {\n          assign(data, token)\n        } else {\n          events.splice(\n            eventIndex,\n            0,\n            ['enter', token, context],\n            ['exit', token, context]\n          )\n          eventIndex += 2\n        }\n      }\n\n      eventIndex++\n    }\n  }\n\n  return events\n}\n\nexports.resolver = resolver\nexports.string = string\nexports.text = text\n","'use strict'\n\nvar hasOwnProperty = require('../constant/has-own-property.js')\nvar chunkedSplice = require('./chunked-splice.js')\nvar miniflat = require('./miniflat.js')\n\nfunction combineExtensions(extensions) {\n  var all = {}\n  var index = -1\n\n  while (++index < extensions.length) {\n    extension(all, extensions[index])\n  }\n\n  return all\n}\n\nfunction extension(all, extension) {\n  var hook\n  var left\n  var right\n  var code\n\n  for (hook in extension) {\n    left = hasOwnProperty.call(all, hook) ? all[hook] : (all[hook] = {})\n    right = extension[hook]\n\n    for (code in right) {\n      left[code] = constructs(\n        miniflat(right[code]),\n        hasOwnProperty.call(left, code) ? left[code] : []\n      )\n    }\n  }\n}\n\nfunction constructs(list, existing) {\n  var index = -1\n  var before = []\n\n  while (++index < list.length) {\n    ;(list[index].add === 'after' ? existing : before).push(list[index])\n  }\n\n  chunkedSplice(existing, 0, 0, before)\n  return existing\n}\n\nmodule.exports = combineExtensions\n","'use strict'\n\nvar markdownLineEndingOrSpace = require('../character/markdown-line-ending-or-space.js')\nvar unicodePunctuation = require('../character/unicode-punctuation.js')\nvar unicodeWhitespace = require('../character/unicode-whitespace.js')\n\n// Classify whether a character is unicode whitespace, unicode punctuation, or\n// anything else.\n// Used for attention (emphasis, strong), whose sequences can open or close\n// based on the class of surrounding characters.\nfunction classifyCharacter(code) {\n  if (\n    code === null ||\n    markdownLineEndingOrSpace(code) ||\n    unicodeWhitespace(code)\n  ) {\n    return 1\n  }\n\n  if (unicodePunctuation(code)) {\n    return 2\n  }\n}\n\nmodule.exports = classifyCharacter\n","'use strict'\n\nvar regexCheck = require('../util/regex-check.js')\n\nvar asciiDigit = regexCheck(/\\d/)\n\nmodule.exports = asciiDigit\n","'use strict'\n\nvar asciiControl = require('../character/ascii-control.js')\nvar markdownLineEndingOrSpace = require('../character/markdown-line-ending-or-space.js')\nvar markdownLineEnding = require('../character/markdown-line-ending.js')\n\n// eslint-disable-next-line max-params\nfunction destinationFactory(\n  effects,\n  ok,\n  nok,\n  type,\n  literalType,\n  literalMarkerType,\n  rawType,\n  stringType,\n  max\n) {\n  var limit = max || Infinity\n  var balance = 0\n  return start\n\n  function start(code) {\n    if (code === 60) {\n      effects.enter(type)\n      effects.enter(literalType)\n      effects.enter(literalMarkerType)\n      effects.consume(code)\n      effects.exit(literalMarkerType)\n      return destinationEnclosedBefore\n    }\n\n    if (asciiControl(code) || code === 41) {\n      return nok(code)\n    }\n\n    effects.enter(type)\n    effects.enter(rawType)\n    effects.enter(stringType)\n    effects.enter('chunkString', {\n      contentType: 'string'\n    })\n    return destinationRaw(code)\n  }\n\n  function destinationEnclosedBefore(code) {\n    if (code === 62) {\n      effects.enter(literalMarkerType)\n      effects.consume(code)\n      effects.exit(literalMarkerType)\n      effects.exit(literalType)\n      effects.exit(type)\n      return ok\n    }\n\n    effects.enter(stringType)\n    effects.enter('chunkString', {\n      contentType: 'string'\n    })\n    return destinationEnclosed(code)\n  }\n\n  function destinationEnclosed(code) {\n    if (code === 62) {\n      effects.exit('chunkString')\n      effects.exit(stringType)\n      return destinationEnclosedBefore(code)\n    }\n\n    if (code === null || code === 60 || markdownLineEnding(code)) {\n      return nok(code)\n    }\n\n    effects.consume(code)\n    return code === 92 ? destinationEnclosedEscape : destinationEnclosed\n  }\n\n  function destinationEnclosedEscape(code) {\n    if (code === 60 || code === 62 || code === 92) {\n      effects.consume(code)\n      return destinationEnclosed\n    }\n\n    return destinationEnclosed(code)\n  }\n\n  function destinationRaw(code) {\n    if (code === 40) {\n      if (++balance > limit) return nok(code)\n      effects.consume(code)\n      return destinationRaw\n    }\n\n    if (code === 41) {\n      if (!balance--) {\n        effects.exit('chunkString')\n        effects.exit(stringType)\n        effects.exit(rawType)\n        effects.exit(type)\n        return ok(code)\n      }\n\n      effects.consume(code)\n      return destinationRaw\n    }\n\n    if (code === null || markdownLineEndingOrSpace(code)) {\n      if (balance) return nok(code)\n      effects.exit('chunkString')\n      effects.exit(stringType)\n      effects.exit(rawType)\n      effects.exit(type)\n      return ok(code)\n    }\n\n    if (asciiControl(code)) return nok(code)\n    effects.consume(code)\n    return code === 92 ? destinationRawEscape : destinationRaw\n  }\n\n  function destinationRawEscape(code) {\n    if (code === 40 || code === 41 || code === 92) {\n      effects.consume(code)\n      return destinationRaw\n    }\n\n    return destinationRaw(code)\n  }\n}\n\nmodule.exports = destinationFactory\n","'use strict'\n\nvar markdownLineEnding = require('../character/markdown-line-ending.js')\nvar markdownSpace = require('../character/markdown-space.js')\n\n// eslint-disable-next-line max-params\nfunction labelFactory(effects, ok, nok, type, markerType, stringType) {\n  var self = this\n  var size = 0\n  var data\n  return start\n\n  function start(code) {\n    effects.enter(type)\n    effects.enter(markerType)\n    effects.consume(code)\n    effects.exit(markerType)\n    effects.enter(stringType)\n    return atBreak\n  }\n\n  function atBreak(code) {\n    if (\n      code === null ||\n      code === 91 ||\n      (code === 93 && !data) ||\n      /* c8 ignore next */\n      (code === 94 &&\n        /* c8 ignore next */\n        !size &&\n        /* c8 ignore next */\n        '_hiddenFootnoteSupport' in self.parser.constructs) ||\n      size > 999\n    ) {\n      return nok(code)\n    }\n\n    if (code === 93) {\n      effects.exit(stringType)\n      effects.enter(markerType)\n      effects.consume(code)\n      effects.exit(markerType)\n      effects.exit(type)\n      return ok\n    }\n\n    if (markdownLineEnding(code)) {\n      effects.enter('lineEnding')\n      effects.consume(code)\n      effects.exit('lineEnding')\n      return atBreak\n    }\n\n    effects.enter('chunkString', {\n      contentType: 'string'\n    })\n    return label(code)\n  }\n\n  function label(code) {\n    if (\n      code === null ||\n      code === 91 ||\n      code === 93 ||\n      markdownLineEnding(code) ||\n      size++ > 999\n    ) {\n      effects.exit('chunkString')\n      return atBreak(code)\n    }\n\n    effects.consume(code)\n    data = data || !markdownSpace(code)\n    return code === 92 ? labelEscape : label\n  }\n\n  function labelEscape(code) {\n    if (code === 91 || code === 92 || code === 93) {\n      effects.consume(code)\n      size++\n      return label\n    }\n\n    return label(code)\n  }\n}\n\nmodule.exports = labelFactory\n","'use strict'\n\nvar markdownLineEnding = require('../character/markdown-line-ending.js')\nvar markdownSpace = require('../character/markdown-space.js')\nvar factorySpace = require('./factory-space.js')\n\nfunction whitespaceFactory(effects, ok) {\n  var seen\n  return start\n\n  function start(code) {\n    if (markdownLineEnding(code)) {\n      effects.enter('lineEnding')\n      effects.consume(code)\n      effects.exit('lineEnding')\n      seen = true\n      return start\n    }\n\n    if (markdownSpace(code)) {\n      return factorySpace(\n        effects,\n        start,\n        seen ? 'linePrefix' : 'lineSuffix'\n      )(code)\n    }\n\n    return ok(code)\n  }\n}\n\nmodule.exports = whitespaceFactory\n","'use strict'\n\nvar markdownLineEnding = require('../character/markdown-line-ending.js')\nvar factorySpace = require('./factory-space.js')\n\nfunction titleFactory(effects, ok, nok, type, markerType, stringType) {\n  var marker\n  return start\n\n  function start(code) {\n    effects.enter(type)\n    effects.enter(markerType)\n    effects.consume(code)\n    effects.exit(markerType)\n    marker = code === 40 ? 41 : code\n    return atFirstTitleBreak\n  }\n\n  function atFirstTitleBreak(code) {\n    if (code === marker) {\n      effects.enter(markerType)\n      effects.consume(code)\n      effects.exit(markerType)\n      effects.exit(type)\n      return ok\n    }\n\n    effects.enter(stringType)\n    return atTitleBreak(code)\n  }\n\n  function atTitleBreak(code) {\n    if (code === marker) {\n      effects.exit(stringType)\n      return atFirstTitleBreak(marker)\n    }\n\n    if (code === null) {\n      return nok(code)\n    } // Note: blank lines can’t exist in content.\n\n    if (markdownLineEnding(code)) {\n      effects.enter('lineEnding')\n      effects.consume(code)\n      effects.exit('lineEnding')\n      return factorySpace(effects, atTitleBreak, 'linePrefix')\n    }\n\n    effects.enter('chunkString', {\n      contentType: 'string'\n    })\n    return title(code)\n  }\n\n  function title(code) {\n    if (code === marker || code === null || markdownLineEnding(code)) {\n      effects.exit('chunkString')\n      return atTitleBreak(code)\n    }\n\n    effects.consume(code)\n    return code === 92 ? titleEscape : title\n  }\n\n  function titleEscape(code) {\n    if (code === marker || code === 92) {\n      effects.consume(code)\n      return title\n    }\n\n    return title(code)\n  }\n}\n\nmodule.exports = titleFactory\n","'use strict'\n\nvar markdownLineEnding = require('../character/markdown-line-ending.js')\nvar markdownSpace = require('../character/markdown-space.js')\nvar factorySpace = require('./factory-space.js')\n\nvar thematicBreak = {\n  name: 'thematicBreak',\n  tokenize: tokenizeThematicBreak\n}\n\nfunction tokenizeThematicBreak(effects, ok, nok) {\n  var size = 0\n  var marker\n  return start\n\n  function start(code) {\n    effects.enter('thematicBreak')\n    marker = code\n    return atBreak(code)\n  }\n\n  function atBreak(code) {\n    if (code === marker) {\n      effects.enter('thematicBreakSequence')\n      return sequence(code)\n    }\n\n    if (markdownSpace(code)) {\n      return factorySpace(effects, atBreak, 'whitespace')(code)\n    }\n\n    if (size < 3 || (code !== null && !markdownLineEnding(code))) {\n      return nok(code)\n    }\n\n    effects.exit('thematicBreak')\n    return ok(code)\n  }\n\n  function sequence(code) {\n    if (code === marker) {\n      effects.consume(code)\n      size++\n      return sequence\n    }\n\n    effects.exit('thematicBreakSequence')\n    return atBreak(code)\n  }\n}\n\nmodule.exports = thematicBreak\n","'use strict'\n\nvar fromCharCode = require('../constant/from-char-code.js')\n\nfunction safeFromInt(value, base) {\n  var code = parseInt(value, base)\n\n  if (\n    // C0 except for HT, LF, FF, CR, space\n    code < 9 ||\n    code === 11 ||\n    (code > 13 && code < 32) || // Control character (DEL) of the basic block and C1 controls.\n    (code > 126 && code < 160) || // Lone high surrogates and low surrogates.\n    (code > 55295 && code < 57344) || // Noncharacters.\n    (code > 64975 && code < 65008) ||\n    (code & 65535) === 65535 ||\n    (code & 65535) === 65534 || // Out of range\n    code > 1114111\n  ) {\n    return '\\uFFFD'\n  }\n\n  return fromCharCode(code)\n}\n\nmodule.exports = safeFromInt\n","'use strict'\n\nvar content = require('./initialize/content.js')\nvar document = require('./initialize/document.js')\nvar flow = require('./initialize/flow.js')\nvar text = require('./initialize/text.js')\nvar combineExtensions = require('./util/combine-extensions.js')\nvar createTokenizer = require('./util/create-tokenizer.js')\nvar miniflat = require('./util/miniflat.js')\nvar constructs = require('./constructs.js')\n\nfunction parse(options) {\n  var settings = options || {}\n  var parser = {\n    defined: [],\n    constructs: combineExtensions(\n      [constructs].concat(miniflat(settings.extensions))\n    ),\n    content: create(content),\n    document: create(document),\n    flow: create(flow),\n    string: create(text.string),\n    text: create(text.text)\n  }\n  return parser\n\n  function create(initializer) {\n    return creator\n\n    function creator(from) {\n      return createTokenizer(parser, initializer, from)\n    }\n  }\n}\n\nmodule.exports = parse\n","'use strict'\n\nObject.defineProperty(exports, '__esModule', {value: true})\n\nvar markdownLineEnding = require('../character/markdown-line-ending.js')\nvar factorySpace = require('../tokenize/factory-space.js')\n\nvar tokenize = initializeContent\n\nfunction initializeContent(effects) {\n  var contentStart = effects.attempt(\n    this.parser.constructs.contentInitial,\n    afterContentStartConstruct,\n    paragraphInitial\n  )\n  var previous\n  return contentStart\n\n  function afterContentStartConstruct(code) {\n    if (code === null) {\n      effects.consume(code)\n      return\n    }\n\n    effects.enter('lineEnding')\n    effects.consume(code)\n    effects.exit('lineEnding')\n    return factorySpace(effects, contentStart, 'linePrefix')\n  }\n\n  function paragraphInitial(code) {\n    effects.enter('paragraph')\n    return lineStart(code)\n  }\n\n  function lineStart(code) {\n    var token = effects.enter('chunkText', {\n      contentType: 'text',\n      previous: previous\n    })\n\n    if (previous) {\n      previous.next = token\n    }\n\n    previous = token\n    return data(code)\n  }\n\n  function data(code) {\n    if (code === null) {\n      effects.exit('chunkText')\n      effects.exit('paragraph')\n      effects.consume(code)\n      return\n    }\n\n    if (markdownLineEnding(code)) {\n      effects.consume(code)\n      effects.exit('chunkText')\n      return lineStart\n    } // Data.\n\n    effects.consume(code)\n    return data\n  }\n}\n\nexports.tokenize = tokenize\n","'use strict'\n\nObject.defineProperty(exports, '__esModule', {value: true})\n\nvar markdownLineEnding = require('../character/markdown-line-ending.js')\nvar factorySpace = require('../tokenize/factory-space.js')\nvar partialBlankLine = require('../tokenize/partial-blank-line.js')\n\nvar tokenize = initializeDocument\nvar containerConstruct = {\n  tokenize: tokenizeContainer\n}\nvar lazyFlowConstruct = {\n  tokenize: tokenizeLazyFlow\n}\n\nfunction initializeDocument(effects) {\n  var self = this\n  var stack = []\n  var continued = 0\n  var inspectConstruct = {\n    tokenize: tokenizeInspect,\n    partial: true\n  }\n  var inspectResult\n  var childFlow\n  var childToken\n  return start\n\n  function start(code) {\n    if (continued < stack.length) {\n      self.containerState = stack[continued][1]\n      return effects.attempt(\n        stack[continued][0].continuation,\n        documentContinue,\n        documentContinued\n      )(code)\n    }\n\n    return documentContinued(code)\n  }\n\n  function documentContinue(code) {\n    continued++\n    return start(code)\n  }\n\n  function documentContinued(code) {\n    // If we’re in a concrete construct (such as when expecting another line of\n    // HTML, or we resulted in lazy content), we can immediately start flow.\n    if (inspectResult && inspectResult.flowContinue) {\n      return flowStart(code)\n    }\n\n    self.interrupt =\n      childFlow &&\n      childFlow.currentConstruct &&\n      childFlow.currentConstruct.interruptible\n    self.containerState = {}\n    return effects.attempt(\n      containerConstruct,\n      containerContinue,\n      flowStart\n    )(code)\n  }\n\n  function containerContinue(code) {\n    stack.push([self.currentConstruct, self.containerState])\n    self.containerState = undefined\n    return documentContinued(code)\n  }\n\n  function flowStart(code) {\n    if (code === null) {\n      exitContainers(0, true)\n      effects.consume(code)\n      return\n    }\n\n    childFlow = childFlow || self.parser.flow(self.now())\n    effects.enter('chunkFlow', {\n      contentType: 'flow',\n      previous: childToken,\n      _tokenizer: childFlow\n    })\n    return flowContinue(code)\n  }\n\n  function flowContinue(code) {\n    if (code === null) {\n      continueFlow(effects.exit('chunkFlow'))\n      return flowStart(code)\n    }\n\n    if (markdownLineEnding(code)) {\n      effects.consume(code)\n      continueFlow(effects.exit('chunkFlow'))\n      return effects.check(inspectConstruct, documentAfterPeek)\n    }\n\n    effects.consume(code)\n    return flowContinue\n  }\n\n  function documentAfterPeek(code) {\n    exitContainers(\n      inspectResult.continued,\n      inspectResult && inspectResult.flowEnd\n    )\n    continued = 0\n    return start(code)\n  }\n\n  function continueFlow(token) {\n    if (childToken) childToken.next = token\n    childToken = token\n    childFlow.lazy = inspectResult && inspectResult.lazy\n    childFlow.defineSkip(token.start)\n    childFlow.write(self.sliceStream(token))\n  }\n\n  function exitContainers(size, end) {\n    var index = stack.length // Close the flow.\n\n    if (childFlow && end) {\n      childFlow.write([null])\n      childToken = childFlow = undefined\n    } // Exit open containers.\n\n    while (index-- > size) {\n      self.containerState = stack[index][1]\n      stack[index][0].exit.call(self, effects)\n    }\n\n    stack.length = size\n  }\n\n  function tokenizeInspect(effects, ok) {\n    var subcontinued = 0\n    inspectResult = {}\n    return inspectStart\n\n    function inspectStart(code) {\n      if (subcontinued < stack.length) {\n        self.containerState = stack[subcontinued][1]\n        return effects.attempt(\n          stack[subcontinued][0].continuation,\n          inspectContinue,\n          inspectLess\n        )(code)\n      } // If we’re continued but in a concrete flow, we can’t have more\n      // containers.\n\n      if (childFlow.currentConstruct && childFlow.currentConstruct.concrete) {\n        inspectResult.flowContinue = true\n        return inspectDone(code)\n      }\n\n      self.interrupt =\n        childFlow.currentConstruct && childFlow.currentConstruct.interruptible\n      self.containerState = {}\n      return effects.attempt(\n        containerConstruct,\n        inspectFlowEnd,\n        inspectDone\n      )(code)\n    }\n\n    function inspectContinue(code) {\n      subcontinued++\n      return self.containerState._closeFlow\n        ? inspectFlowEnd(code)\n        : inspectStart(code)\n    }\n\n    function inspectLess(code) {\n      if (childFlow.currentConstruct && childFlow.currentConstruct.lazy) {\n        // Maybe another container?\n        self.containerState = {}\n        return effects.attempt(\n          containerConstruct,\n          inspectFlowEnd, // Maybe flow, or a blank line?\n          effects.attempt(\n            lazyFlowConstruct,\n            inspectFlowEnd,\n            effects.check(partialBlankLine, inspectFlowEnd, inspectLazy)\n          )\n        )(code)\n      } // Otherwise we’re interrupting.\n\n      return inspectFlowEnd(code)\n    }\n\n    function inspectLazy(code) {\n      // Act as if all containers are continued.\n      subcontinued = stack.length\n      inspectResult.lazy = true\n      inspectResult.flowContinue = true\n      return inspectDone(code)\n    } // We’re done with flow if we have more containers, or an interruption.\n\n    function inspectFlowEnd(code) {\n      inspectResult.flowEnd = true\n      return inspectDone(code)\n    }\n\n    function inspectDone(code) {\n      inspectResult.continued = subcontinued\n      self.interrupt = self.containerState = undefined\n      return ok(code)\n    }\n  }\n}\n\nfunction tokenizeContainer(effects, ok, nok) {\n  return factorySpace(\n    effects,\n    effects.attempt(this.parser.constructs.document, ok, nok),\n    'linePrefix',\n    this.parser.constructs.disable.null.indexOf('codeIndented') > -1\n      ? undefined\n      : 4\n  )\n}\n\nfunction tokenizeLazyFlow(effects, ok, nok) {\n  return factorySpace(\n    effects,\n    effects.lazy(this.parser.constructs.flow, ok, nok),\n    'linePrefix',\n    this.parser.constructs.disable.null.indexOf('codeIndented') > -1\n      ? undefined\n      : 4\n  )\n}\n\nexports.tokenize = tokenize\n","'use strict'\n\nObject.defineProperty(exports, '__esModule', {value: true})\n\nvar content = require('../tokenize/content.js')\nvar factorySpace = require('../tokenize/factory-space.js')\nvar partialBlankLine = require('../tokenize/partial-blank-line.js')\n\nvar tokenize = initializeFlow\n\nfunction initializeFlow(effects) {\n  var self = this\n  var initial = effects.attempt(\n    // Try to parse a blank line.\n    partialBlankLine,\n    atBlankEnding, // Try to parse initial flow (essentially, only code).\n    effects.attempt(\n      this.parser.constructs.flowInitial,\n      afterConstruct,\n      factorySpace(\n        effects,\n        effects.attempt(\n          this.parser.constructs.flow,\n          afterConstruct,\n          effects.attempt(content, afterConstruct)\n        ),\n        'linePrefix'\n      )\n    )\n  )\n  return initial\n\n  function atBlankEnding(code) {\n    if (code === null) {\n      effects.consume(code)\n      return\n    }\n\n    effects.enter('lineEndingBlank')\n    effects.consume(code)\n    effects.exit('lineEndingBlank')\n    self.currentConstruct = undefined\n    return initial\n  }\n\n  function afterConstruct(code) {\n    if (code === null) {\n      effects.consume(code)\n      return\n    }\n\n    effects.enter('lineEnding')\n    effects.consume(code)\n    effects.exit('lineEnding')\n    self.currentConstruct = undefined\n    return initial\n  }\n}\n\nexports.tokenize = tokenize\n","'use strict'\n\nvar markdownLineEnding = require('../character/markdown-line-ending.js')\nvar prefixSize = require('../util/prefix-size.js')\nvar subtokenize = require('../util/subtokenize.js')\nvar factorySpace = require('./factory-space.js')\n\n// No name because it must not be turned off.\nvar content = {\n  tokenize: tokenizeContent,\n  resolve: resolveContent,\n  interruptible: true,\n  lazy: true\n}\nvar continuationConstruct = {\n  tokenize: tokenizeContinuation,\n  partial: true\n} // Content is transparent: it’s parsed right now. That way, definitions are also\n// parsed right now: before text in paragraphs (specifically, media) are parsed.\n\nfunction resolveContent(events) {\n  subtokenize(events)\n  return events\n}\n\nfunction tokenizeContent(effects, ok) {\n  var previous\n  return start\n\n  function start(code) {\n    effects.enter('content')\n    previous = effects.enter('chunkContent', {\n      contentType: 'content'\n    })\n    return data(code)\n  }\n\n  function data(code) {\n    if (code === null) {\n      return contentEnd(code)\n    }\n\n    if (markdownLineEnding(code)) {\n      return effects.check(\n        continuationConstruct,\n        contentContinue,\n        contentEnd\n      )(code)\n    } // Data.\n\n    effects.consume(code)\n    return data\n  }\n\n  function contentEnd(code) {\n    effects.exit('chunkContent')\n    effects.exit('content')\n    return ok(code)\n  }\n\n  function contentContinue(code) {\n    effects.consume(code)\n    effects.exit('chunkContent')\n    previous = previous.next = effects.enter('chunkContent', {\n      contentType: 'content',\n      previous: previous\n    })\n    return data\n  }\n}\n\nfunction tokenizeContinuation(effects, ok, nok) {\n  var self = this\n  return startLookahead\n\n  function startLookahead(code) {\n    effects.enter('lineEnding')\n    effects.consume(code)\n    effects.exit('lineEnding')\n    return factorySpace(effects, prefixed, 'linePrefix')\n  }\n\n  function prefixed(code) {\n    if (code === null || markdownLineEnding(code)) {\n      return nok(code)\n    }\n\n    if (\n      self.parser.constructs.disable.null.indexOf('codeIndented') > -1 ||\n      prefixSize(self.events, 'linePrefix') < 4\n    ) {\n      return effects.interrupt(self.parser.constructs.flow, nok, ok)(code)\n    }\n\n    return ok(code)\n  }\n}\n\nmodule.exports = content\n","'use strict'\n\nvar splice = [].splice\n\nmodule.exports = splice\n","'use strict'\n\nvar assign = require('../constant/assign.js')\nvar markdownLineEnding = require('../character/markdown-line-ending.js')\nvar chunkedPush = require('./chunked-push.js')\nvar chunkedSplice = require('./chunked-splice.js')\nvar miniflat = require('./miniflat.js')\nvar resolveAll = require('./resolve-all.js')\nvar serializeChunks = require('./serialize-chunks.js')\nvar shallow = require('./shallow.js')\nvar sliceChunks = require('./slice-chunks.js')\n\n// Create a tokenizer.\n// Tokenizers deal with one type of data (e.g., containers, flow, text).\n// The parser is the object dealing with it all.\n// `initialize` works like other constructs, except that only its `tokenize`\n// function is used, in which case it doesn’t receive an `ok` or `nok`.\n// `from` can be given to set the point before the first character, although\n// when further lines are indented, they must be set with `defineSkip`.\nfunction createTokenizer(parser, initialize, from) {\n  var point = from\n    ? shallow(from)\n    : {\n        line: 1,\n        column: 1,\n        offset: 0\n      }\n  var columnStart = {}\n  var resolveAllConstructs = []\n  var chunks = []\n  var stack = []\n\n  var effects = {\n    consume: consume,\n    enter: enter,\n    exit: exit,\n    attempt: constructFactory(onsuccessfulconstruct),\n    check: constructFactory(onsuccessfulcheck),\n    interrupt: constructFactory(onsuccessfulcheck, {\n      interrupt: true\n    }),\n    lazy: constructFactory(onsuccessfulcheck, {\n      lazy: true\n    })\n  } // State and tools for resolving and serializing.\n\n  var context = {\n    previous: null,\n    events: [],\n    parser: parser,\n    sliceStream: sliceStream,\n    sliceSerialize: sliceSerialize,\n    now: now,\n    defineSkip: skip,\n    write: write\n  } // The state function.\n\n  var state = initialize.tokenize.call(context, effects) // Track which character we expect to be consumed, to catch bugs.\n\n  if (initialize.resolveAll) {\n    resolveAllConstructs.push(initialize)\n  } // Store where we are in the input stream.\n\n  point._index = 0\n  point._bufferIndex = -1\n  return context\n\n  function write(slice) {\n    chunks = chunkedPush(chunks, slice)\n    main() // Exit if we’re not done, resolve might change stuff.\n\n    if (chunks[chunks.length - 1] !== null) {\n      return []\n    }\n\n    addResult(initialize, 0) // Otherwise, resolve, and exit.\n\n    context.events = resolveAll(resolveAllConstructs, context.events, context)\n    return context.events\n  } //\n  // Tools.\n  //\n\n  function sliceSerialize(token) {\n    return serializeChunks(sliceStream(token))\n  }\n\n  function sliceStream(token) {\n    return sliceChunks(chunks, token)\n  }\n\n  function now() {\n    return shallow(point)\n  }\n\n  function skip(value) {\n    columnStart[value.line] = value.column\n    accountForPotentialSkip()\n  } //\n  // State management.\n  //\n  // Main loop (note that `_index` and `_bufferIndex` in `point` are modified by\n  // `consume`).\n  // Here is where we walk through the chunks, which either include strings of\n  // several characters, or numerical character codes.\n  // The reason to do this in a loop instead of a call is so the stack can\n  // drain.\n\n  function main() {\n    var chunkIndex\n    var chunk\n\n    while (point._index < chunks.length) {\n      chunk = chunks[point._index] // If we’re in a buffer chunk, loop through it.\n\n      if (typeof chunk === 'string') {\n        chunkIndex = point._index\n\n        if (point._bufferIndex < 0) {\n          point._bufferIndex = 0\n        }\n\n        while (\n          point._index === chunkIndex &&\n          point._bufferIndex < chunk.length\n        ) {\n          go(chunk.charCodeAt(point._bufferIndex))\n        }\n      } else {\n        go(chunk)\n      }\n    }\n  } // Deal with one code.\n\n  function go(code) {\n    state = state(code)\n  } // Move a character forward.\n\n  function consume(code) {\n    if (markdownLineEnding(code)) {\n      point.line++\n      point.column = 1\n      point.offset += code === -3 ? 2 : 1\n      accountForPotentialSkip()\n    } else if (code !== -1) {\n      point.column++\n      point.offset++\n    } // Not in a string chunk.\n\n    if (point._bufferIndex < 0) {\n      point._index++\n    } else {\n      point._bufferIndex++ // At end of string chunk.\n\n      if (point._bufferIndex === chunks[point._index].length) {\n        point._bufferIndex = -1\n        point._index++\n      }\n    } // Expose the previous character.\n\n    context.previous = code // Mark as consumed.\n  } // Start a token.\n\n  function enter(type, fields) {\n    var token = fields || {}\n    token.type = type\n    token.start = now()\n    context.events.push(['enter', token, context])\n    stack.push(token)\n    return token\n  } // Stop a token.\n\n  function exit(type) {\n    var token = stack.pop()\n    token.end = now()\n    context.events.push(['exit', token, context])\n    return token\n  } // Use results.\n\n  function onsuccessfulconstruct(construct, info) {\n    addResult(construct, info.from)\n  } // Discard results.\n\n  function onsuccessfulcheck(construct, info) {\n    info.restore()\n  } // Factory to attempt/check/interrupt.\n\n  function constructFactory(onreturn, fields) {\n    return hook // Handle either an object mapping codes to constructs, a list of\n    // constructs, or a single construct.\n\n    function hook(constructs, returnState, bogusState) {\n      var listOfConstructs\n      var constructIndex\n      var currentConstruct\n      var info\n      return constructs.tokenize || 'length' in constructs\n        ? handleListOfConstructs(miniflat(constructs))\n        : handleMapOfConstructs\n\n      function handleMapOfConstructs(code) {\n        if (code in constructs || null in constructs) {\n          return handleListOfConstructs(\n            constructs.null\n              ? /* c8 ignore next */\n                miniflat(constructs[code]).concat(miniflat(constructs.null))\n              : constructs[code]\n          )(code)\n        }\n\n        return bogusState(code)\n      }\n\n      function handleListOfConstructs(list) {\n        listOfConstructs = list\n        constructIndex = 0\n        return handleConstruct(list[constructIndex])\n      }\n\n      function handleConstruct(construct) {\n        return start\n\n        function start(code) {\n          // To do: not nede to store if there is no bogus state, probably?\n          // Currently doesn’t work because `inspect` in document does a check\n          // w/o a bogus, which doesn’t make sense. But it does seem to help perf\n          // by not storing.\n          info = store()\n          currentConstruct = construct\n\n          if (!construct.partial) {\n            context.currentConstruct = construct\n          }\n\n          if (\n            construct.name &&\n            context.parser.constructs.disable.null.indexOf(construct.name) > -1\n          ) {\n            return nok()\n          }\n\n          return construct.tokenize.call(\n            fields ? assign({}, context, fields) : context,\n            effects,\n            ok,\n            nok\n          )(code)\n        }\n      }\n\n      function ok(code) {\n        onreturn(currentConstruct, info)\n        return returnState\n      }\n\n      function nok(code) {\n        info.restore()\n\n        if (++constructIndex < listOfConstructs.length) {\n          return handleConstruct(listOfConstructs[constructIndex])\n        }\n\n        return bogusState\n      }\n    }\n  }\n\n  function addResult(construct, from) {\n    if (construct.resolveAll && resolveAllConstructs.indexOf(construct) < 0) {\n      resolveAllConstructs.push(construct)\n    }\n\n    if (construct.resolve) {\n      chunkedSplice(\n        context.events,\n        from,\n        context.events.length - from,\n        construct.resolve(context.events.slice(from), context)\n      )\n    }\n\n    if (construct.resolveTo) {\n      context.events = construct.resolveTo(context.events, context)\n    }\n  }\n\n  function store() {\n    var startPoint = now()\n    var startPrevious = context.previous\n    var startCurrentConstruct = context.currentConstruct\n    var startEventsIndex = context.events.length\n    var startStack = Array.from(stack)\n    return {\n      restore: restore,\n      from: startEventsIndex\n    }\n\n    function restore() {\n      point = startPoint\n      context.previous = startPrevious\n      context.currentConstruct = startCurrentConstruct\n      context.events.length = startEventsIndex\n      stack = startStack\n      accountForPotentialSkip()\n    }\n  }\n\n  function accountForPotentialSkip() {\n    if (point.line in columnStart && point.column < 2) {\n      point.column = columnStart[point.line]\n      point.offset += columnStart[point.line] - 1\n    }\n  }\n}\n\nmodule.exports = createTokenizer\n","'use strict'\n\nvar fromCharCode = require('../constant/from-char-code.js')\n\nfunction serializeChunks(chunks) {\n  var index = -1\n  var result = []\n  var chunk\n  var value\n  var atTab\n\n  while (++index < chunks.length) {\n    chunk = chunks[index]\n\n    if (typeof chunk === 'string') {\n      value = chunk\n    } else if (chunk === -5) {\n      value = '\\r'\n    } else if (chunk === -4) {\n      value = '\\n'\n    } else if (chunk === -3) {\n      value = '\\r' + '\\n'\n    } else if (chunk === -2) {\n      value = '\\t'\n    } else if (chunk === -1) {\n      if (atTab) continue\n      value = ' '\n    } else {\n      // Currently only replacement character.\n      value = fromCharCode(chunk)\n    }\n\n    atTab = chunk === -2\n    result.push(value)\n  }\n\n  return result.join('')\n}\n\nmodule.exports = serializeChunks\n","'use strict'\n\nfunction sliceChunks(chunks, token) {\n  var startIndex = token.start._index\n  var startBufferIndex = token.start._bufferIndex\n  var endIndex = token.end._index\n  var endBufferIndex = token.end._bufferIndex\n  var view\n\n  if (startIndex === endIndex) {\n    view = [chunks[startIndex].slice(startBufferIndex, endBufferIndex)]\n  } else {\n    view = chunks.slice(startIndex, endIndex)\n\n    if (startBufferIndex > -1) {\n      view[0] = view[0].slice(startBufferIndex)\n    }\n\n    if (endBufferIndex > 0) {\n      view.push(chunks[endIndex].slice(0, endBufferIndex))\n    }\n  }\n\n  return view\n}\n\nmodule.exports = sliceChunks\n","'use strict'\n\nObject.defineProperty(exports, '__esModule', {value: true})\n\nvar text$1 = require('./initialize/text.js')\nvar attention = require('./tokenize/attention.js')\nvar autolink = require('./tokenize/autolink.js')\nvar blockQuote = require('./tokenize/block-quote.js')\nvar characterEscape = require('./tokenize/character-escape.js')\nvar characterReference = require('./tokenize/character-reference.js')\nvar codeFenced = require('./tokenize/code-fenced.js')\nvar codeIndented = require('./tokenize/code-indented.js')\nvar codeText = require('./tokenize/code-text.js')\nvar definition = require('./tokenize/definition.js')\nvar hardBreakEscape = require('./tokenize/hard-break-escape.js')\nvar headingAtx = require('./tokenize/heading-atx.js')\nvar htmlFlow = require('./tokenize/html-flow.js')\nvar htmlText = require('./tokenize/html-text.js')\nvar labelEnd = require('./tokenize/label-end.js')\nvar labelStartImage = require('./tokenize/label-start-image.js')\nvar labelStartLink = require('./tokenize/label-start-link.js')\nvar lineEnding = require('./tokenize/line-ending.js')\nvar list = require('./tokenize/list.js')\nvar setextUnderline = require('./tokenize/setext-underline.js')\nvar thematicBreak = require('./tokenize/thematic-break.js')\n\nvar document = {\n  42: list,\n  // Asterisk\n  43: list,\n  // Plus sign\n  45: list,\n  // Dash\n  48: list,\n  // 0\n  49: list,\n  // 1\n  50: list,\n  // 2\n  51: list,\n  // 3\n  52: list,\n  // 4\n  53: list,\n  // 5\n  54: list,\n  // 6\n  55: list,\n  // 7\n  56: list,\n  // 8\n  57: list,\n  // 9\n  62: blockQuote // Greater than\n}\nvar contentInitial = {\n  91: definition // Left square bracket\n}\nvar flowInitial = {\n  '-2': codeIndented,\n  // Horizontal tab\n  '-1': codeIndented,\n  // Virtual space\n  32: codeIndented // Space\n}\nvar flow = {\n  35: headingAtx,\n  // Number sign\n  42: thematicBreak,\n  // Asterisk\n  45: [setextUnderline, thematicBreak],\n  // Dash\n  60: htmlFlow,\n  // Less than\n  61: setextUnderline,\n  // Equals to\n  95: thematicBreak,\n  // Underscore\n  96: codeFenced,\n  // Grave accent\n  126: codeFenced // Tilde\n}\nvar string = {\n  38: characterReference,\n  // Ampersand\n  92: characterEscape // Backslash\n}\nvar text = {\n  '-5': lineEnding,\n  // Carriage return\n  '-4': lineEnding,\n  // Line feed\n  '-3': lineEnding,\n  // Carriage return + line feed\n  33: labelStartImage,\n  // Exclamation mark\n  38: characterReference,\n  // Ampersand\n  42: attention,\n  // Asterisk\n  60: [autolink, htmlText],\n  // Less than\n  91: labelStartLink,\n  // Left square bracket\n  92: [hardBreakEscape, characterEscape],\n  // Backslash\n  93: labelEnd,\n  // Right square bracket\n  95: attention,\n  // Underscore\n  96: codeText // Grave accent\n}\nvar insideSpan = {\n  null: [attention, text$1.resolver]\n}\nvar disable = {\n  null: []\n}\n\nexports.contentInitial = contentInitial\nexports.disable = disable\nexports.document = document\nexports.flow = flow\nexports.flowInitial = flowInitial\nexports.insideSpan = insideSpan\nexports.string = string\nexports.text = text\n","'use strict'\n\nvar chunkedPush = require('../util/chunked-push.js')\nvar chunkedSplice = require('../util/chunked-splice.js')\nvar classifyCharacter = require('../util/classify-character.js')\nvar movePoint = require('../util/move-point.js')\nvar resolveAll = require('../util/resolve-all.js')\nvar shallow = require('../util/shallow.js')\n\nvar attention = {\n  name: 'attention',\n  tokenize: tokenizeAttention,\n  resolveAll: resolveAllAttention\n}\n\nfunction resolveAllAttention(events, context) {\n  var index = -1\n  var open\n  var group\n  var text\n  var openingSequence\n  var closingSequence\n  var use\n  var nextEvents\n  var offset // Walk through all events.\n  //\n  // Note: performance of this is fine on an mb of normal markdown, but it’s\n  // a bottleneck for malicious stuff.\n\n  while (++index < events.length) {\n    // Find a token that can close.\n    if (\n      events[index][0] === 'enter' &&\n      events[index][1].type === 'attentionSequence' &&\n      events[index][1]._close\n    ) {\n      open = index // Now walk back to find an opener.\n\n      while (open--) {\n        // Find a token that can open the closer.\n        if (\n          events[open][0] === 'exit' &&\n          events[open][1].type === 'attentionSequence' &&\n          events[open][1]._open && // If the markers are the same:\n          context.sliceSerialize(events[open][1]).charCodeAt(0) ===\n            context.sliceSerialize(events[index][1]).charCodeAt(0)\n        ) {\n          // If the opening can close or the closing can open,\n          // and the close size *is not* a multiple of three,\n          // but the sum of the opening and closing size *is* multiple of three,\n          // then don’t match.\n          if (\n            (events[open][1]._close || events[index][1]._open) &&\n            (events[index][1].end.offset - events[index][1].start.offset) % 3 &&\n            !(\n              (events[open][1].end.offset -\n                events[open][1].start.offset +\n                events[index][1].end.offset -\n                events[index][1].start.offset) %\n              3\n            )\n          ) {\n            continue\n          } // Number of markers to use from the sequence.\n\n          use =\n            events[open][1].end.offset - events[open][1].start.offset > 1 &&\n            events[index][1].end.offset - events[index][1].start.offset > 1\n              ? 2\n              : 1\n          openingSequence = {\n            type: use > 1 ? 'strongSequence' : 'emphasisSequence',\n            start: movePoint(shallow(events[open][1].end), -use),\n            end: shallow(events[open][1].end)\n          }\n          closingSequence = {\n            type: use > 1 ? 'strongSequence' : 'emphasisSequence',\n            start: shallow(events[index][1].start),\n            end: movePoint(shallow(events[index][1].start), use)\n          }\n          text = {\n            type: use > 1 ? 'strongText' : 'emphasisText',\n            start: shallow(events[open][1].end),\n            end: shallow(events[index][1].start)\n          }\n          group = {\n            type: use > 1 ? 'strong' : 'emphasis',\n            start: shallow(openingSequence.start),\n            end: shallow(closingSequence.end)\n          }\n          events[open][1].end = shallow(openingSequence.start)\n          events[index][1].start = shallow(closingSequence.end)\n          nextEvents = [] // If there are more markers in the opening, add them before.\n\n          if (events[open][1].end.offset - events[open][1].start.offset) {\n            nextEvents = chunkedPush(nextEvents, [\n              ['enter', events[open][1], context],\n              ['exit', events[open][1], context]\n            ])\n          } // Opening.\n\n          nextEvents = chunkedPush(nextEvents, [\n            ['enter', group, context],\n            ['enter', openingSequence, context],\n            ['exit', openingSequence, context],\n            ['enter', text, context]\n          ]) // Between.\n\n          nextEvents = chunkedPush(\n            nextEvents,\n            resolveAll(\n              context.parser.constructs.insideSpan.null,\n              events.slice(open + 1, index),\n              context\n            )\n          ) // Closing.\n\n          nextEvents = chunkedPush(nextEvents, [\n            ['exit', text, context],\n            ['enter', closingSequence, context],\n            ['exit', closingSequence, context],\n            ['exit', group, context]\n          ]) // If there are more markers in the closing, add them after.\n\n          if (events[index][1].end.offset - events[index][1].start.offset) {\n            offset = 2\n            nextEvents = chunkedPush(nextEvents, [\n              ['enter', events[index][1], context],\n              ['exit', events[index][1], context]\n            ])\n          } else {\n            offset = 0\n          }\n\n          chunkedSplice(events, open - 1, index - open + 3, nextEvents)\n          index = open + nextEvents.length - offset - 2\n          break\n        }\n      }\n    }\n  } // Remove remaining sequences.\n\n  index = -1\n\n  while (++index < events.length) {\n    if (events[index][1].type === 'attentionSequence') {\n      events[index][1].type = 'data'\n    }\n  }\n\n  return events\n}\n\nfunction tokenizeAttention(effects, ok) {\n  var before = classifyCharacter(this.previous)\n  var marker\n  return start\n\n  function start(code) {\n    effects.enter('attentionSequence')\n    marker = code\n    return sequence(code)\n  }\n\n  function sequence(code) {\n    var token\n    var after\n    var open\n    var close\n\n    if (code === marker) {\n      effects.consume(code)\n      return sequence\n    }\n\n    token = effects.exit('attentionSequence')\n    after = classifyCharacter(code)\n    open = !after || (after === 2 && before)\n    close = !before || (before === 2 && after)\n    token._open = marker === 42 ? open : open && (before || !close)\n    token._close = marker === 42 ? close : close && (after || !open)\n    return ok(code)\n  }\n}\n\nmodule.exports = attention\n","'use strict'\n\n// This module is generated by `script/`.\n//\n// CommonMark handles attention (emphasis, strong) markers based on what comes\n// before or after them.\n// One such difference is if those characters are Unicode punctuation.\n// This script is generated from the Unicode data.\nvar unicodePunctuation = /[!-\\/:-@\\[-`\\{-~\\xA1\\xA7\\xAB\\xB6\\xB7\\xBB\\xBF\\u037E\\u0387\\u055A-\\u055F\\u0589\\u058A\\u05BE\\u05C0\\u05C3\\u05C6\\u05F3\\u05F4\\u0609\\u060A\\u060C\\u060D\\u061B\\u061E\\u061F\\u066A-\\u066D\\u06D4\\u0700-\\u070D\\u07F7-\\u07F9\\u0830-\\u083E\\u085E\\u0964\\u0965\\u0970\\u09FD\\u0A76\\u0AF0\\u0C77\\u0C84\\u0DF4\\u0E4F\\u0E5A\\u0E5B\\u0F04-\\u0F12\\u0F14\\u0F3A-\\u0F3D\\u0F85\\u0FD0-\\u0FD4\\u0FD9\\u0FDA\\u104A-\\u104F\\u10FB\\u1360-\\u1368\\u1400\\u166E\\u169B\\u169C\\u16EB-\\u16ED\\u1735\\u1736\\u17D4-\\u17D6\\u17D8-\\u17DA\\u1800-\\u180A\\u1944\\u1945\\u1A1E\\u1A1F\\u1AA0-\\u1AA6\\u1AA8-\\u1AAD\\u1B5A-\\u1B60\\u1BFC-\\u1BFF\\u1C3B-\\u1C3F\\u1C7E\\u1C7F\\u1CC0-\\u1CC7\\u1CD3\\u2010-\\u2027\\u2030-\\u2043\\u2045-\\u2051\\u2053-\\u205E\\u207D\\u207E\\u208D\\u208E\\u2308-\\u230B\\u2329\\u232A\\u2768-\\u2775\\u27C5\\u27C6\\u27E6-\\u27EF\\u2983-\\u2998\\u29D8-\\u29DB\\u29FC\\u29FD\\u2CF9-\\u2CFC\\u2CFE\\u2CFF\\u2D70\\u2E00-\\u2E2E\\u2E30-\\u2E4F\\u2E52\\u3001-\\u3003\\u3008-\\u3011\\u3014-\\u301F\\u3030\\u303D\\u30A0\\u30FB\\uA4FE\\uA4FF\\uA60D-\\uA60F\\uA673\\uA67E\\uA6F2-\\uA6F7\\uA874-\\uA877\\uA8CE\\uA8CF\\uA8F8-\\uA8FA\\uA8FC\\uA92E\\uA92F\\uA95F\\uA9C1-\\uA9CD\\uA9DE\\uA9DF\\uAA5C-\\uAA5F\\uAADE\\uAADF\\uAAF0\\uAAF1\\uABEB\\uFD3E\\uFD3F\\uFE10-\\uFE19\\uFE30-\\uFE52\\uFE54-\\uFE61\\uFE63\\uFE68\\uFE6A\\uFE6B\\uFF01-\\uFF03\\uFF05-\\uFF0A\\uFF0C-\\uFF0F\\uFF1A\\uFF1B\\uFF1F\\uFF20\\uFF3B-\\uFF3D\\uFF3F\\uFF5B\\uFF5D\\uFF5F-\\uFF65]/\n\nmodule.exports = unicodePunctuation\n","'use strict'\n\n// chunks (replacement characters, tabs, or line endings).\n\nfunction movePoint(point, offset) {\n  point.column += offset\n  point.offset += offset\n  point._bufferIndex += offset\n  return point\n}\n\nmodule.exports = movePoint\n","'use strict'\n\nvar asciiAlpha = require('../character/ascii-alpha.js')\nvar asciiAlphanumeric = require('../character/ascii-alphanumeric.js')\nvar asciiAtext = require('../character/ascii-atext.js')\nvar asciiControl = require('../character/ascii-control.js')\n\nvar autolink = {\n  name: 'autolink',\n  tokenize: tokenizeAutolink\n}\n\nfunction tokenizeAutolink(effects, ok, nok) {\n  var size = 1\n  return start\n\n  function start(code) {\n    effects.enter('autolink')\n    effects.enter('autolinkMarker')\n    effects.consume(code)\n    effects.exit('autolinkMarker')\n    effects.enter('autolinkProtocol')\n    return open\n  }\n\n  function open(code) {\n    if (asciiAlpha(code)) {\n      effects.consume(code)\n      return schemeOrEmailAtext\n    }\n\n    return asciiAtext(code) ? emailAtext(code) : nok(code)\n  }\n\n  function schemeOrEmailAtext(code) {\n    return code === 43 || code === 45 || code === 46 || asciiAlphanumeric(code)\n      ? schemeInsideOrEmailAtext(code)\n      : emailAtext(code)\n  }\n\n  function schemeInsideOrEmailAtext(code) {\n    if (code === 58) {\n      effects.consume(code)\n      return urlInside\n    }\n\n    if (\n      (code === 43 || code === 45 || code === 46 || asciiAlphanumeric(code)) &&\n      size++ < 32\n    ) {\n      effects.consume(code)\n      return schemeInsideOrEmailAtext\n    }\n\n    return emailAtext(code)\n  }\n\n  function urlInside(code) {\n    if (code === 62) {\n      effects.exit('autolinkProtocol')\n      return end(code)\n    }\n\n    if (code === 32 || code === 60 || asciiControl(code)) {\n      return nok(code)\n    }\n\n    effects.consume(code)\n    return urlInside\n  }\n\n  function emailAtext(code) {\n    if (code === 64) {\n      effects.consume(code)\n      size = 0\n      return emailAtSignOrDot\n    }\n\n    if (asciiAtext(code)) {\n      effects.consume(code)\n      return emailAtext\n    }\n\n    return nok(code)\n  }\n\n  function emailAtSignOrDot(code) {\n    return asciiAlphanumeric(code) ? emailLabel(code) : nok(code)\n  }\n\n  function emailLabel(code) {\n    if (code === 46) {\n      effects.consume(code)\n      size = 0\n      return emailAtSignOrDot\n    }\n\n    if (code === 62) {\n      // Exit, then change the type.\n      effects.exit('autolinkProtocol').type = 'autolinkEmail'\n      return end(code)\n    }\n\n    return emailValue(code)\n  }\n\n  function emailValue(code) {\n    if ((code === 45 || asciiAlphanumeric(code)) && size++ < 63) {\n      effects.consume(code)\n      return code === 45 ? emailValue : emailLabel\n    }\n\n    return nok(code)\n  }\n\n  function end(code) {\n    effects.enter('autolinkMarker')\n    effects.consume(code)\n    effects.exit('autolinkMarker')\n    effects.exit('autolink')\n    return ok\n  }\n}\n\nmodule.exports = autolink\n","'use strict'\n\nvar regexCheck = require('../util/regex-check.js')\n\nvar asciiAtext = regexCheck(/[#-'*+\\--9=?A-Z^-~]/)\n\nmodule.exports = asciiAtext\n","'use strict'\n\nvar markdownSpace = require('../character/markdown-space.js')\nvar factorySpace = require('./factory-space.js')\n\nvar blockQuote = {\n  name: 'blockQuote',\n  tokenize: tokenizeBlockQuoteStart,\n  continuation: {\n    tokenize: tokenizeBlockQuoteContinuation\n  },\n  exit: exit\n}\n\nfunction tokenizeBlockQuoteStart(effects, ok, nok) {\n  var self = this\n  return start\n\n  function start(code) {\n    if (code === 62) {\n      if (!self.containerState.open) {\n        effects.enter('blockQuote', {\n          _container: true\n        })\n        self.containerState.open = true\n      }\n\n      effects.enter('blockQuotePrefix')\n      effects.enter('blockQuoteMarker')\n      effects.consume(code)\n      effects.exit('blockQuoteMarker')\n      return after\n    }\n\n    return nok(code)\n  }\n\n  function after(code) {\n    if (markdownSpace(code)) {\n      effects.enter('blockQuotePrefixWhitespace')\n      effects.consume(code)\n      effects.exit('blockQuotePrefixWhitespace')\n      effects.exit('blockQuotePrefix')\n      return ok\n    }\n\n    effects.exit('blockQuotePrefix')\n    return ok(code)\n  }\n}\n\nfunction tokenizeBlockQuoteContinuation(effects, ok, nok) {\n  return factorySpace(\n    effects,\n    effects.attempt(blockQuote, ok, nok),\n    'linePrefix',\n    this.parser.constructs.disable.null.indexOf('codeIndented') > -1\n      ? undefined\n      : 4\n  )\n}\n\nfunction exit(effects) {\n  effects.exit('blockQuote')\n}\n\nmodule.exports = blockQuote\n","'use strict'\n\nvar asciiPunctuation = require('../character/ascii-punctuation.js')\n\nvar characterEscape = {\n  name: 'characterEscape',\n  tokenize: tokenizeCharacterEscape\n}\n\nfunction tokenizeCharacterEscape(effects, ok, nok) {\n  return start\n\n  function start(code) {\n    effects.enter('characterEscape')\n    effects.enter('escapeMarker')\n    effects.consume(code)\n    effects.exit('escapeMarker')\n    return open\n  }\n\n  function open(code) {\n    if (asciiPunctuation(code)) {\n      effects.enter('characterEscapeValue')\n      effects.consume(code)\n      effects.exit('characterEscapeValue')\n      effects.exit('characterEscape')\n      return ok\n    }\n\n    return nok(code)\n  }\n}\n\nmodule.exports = characterEscape\n","'use strict'\n\nvar regexCheck = require('../util/regex-check.js')\n\nvar asciiPunctuation = regexCheck(/[!-/:-@[-`{-~]/)\n\nmodule.exports = asciiPunctuation\n","'use strict'\n\nvar decodeEntity = require('parse-entities/decode-entity.js')\nvar asciiAlphanumeric = require('../character/ascii-alphanumeric.js')\nvar asciiDigit = require('../character/ascii-digit.js')\nvar asciiHexDigit = require('../character/ascii-hex-digit.js')\n\nfunction _interopDefaultLegacy(e) {\n  return e && typeof e === 'object' && 'default' in e ? e : {default: e}\n}\n\nvar decodeEntity__default = /*#__PURE__*/ _interopDefaultLegacy(decodeEntity)\n\nvar characterReference = {\n  name: 'characterReference',\n  tokenize: tokenizeCharacterReference\n}\n\nfunction tokenizeCharacterReference(effects, ok, nok) {\n  var self = this\n  var size = 0\n  var max\n  var test\n  return start\n\n  function start(code) {\n    effects.enter('characterReference')\n    effects.enter('characterReferenceMarker')\n    effects.consume(code)\n    effects.exit('characterReferenceMarker')\n    return open\n  }\n\n  function open(code) {\n    if (code === 35) {\n      effects.enter('characterReferenceMarkerNumeric')\n      effects.consume(code)\n      effects.exit('characterReferenceMarkerNumeric')\n      return numeric\n    }\n\n    effects.enter('characterReferenceValue')\n    max = 31\n    test = asciiAlphanumeric\n    return value(code)\n  }\n\n  function numeric(code) {\n    if (code === 88 || code === 120) {\n      effects.enter('characterReferenceMarkerHexadecimal')\n      effects.consume(code)\n      effects.exit('characterReferenceMarkerHexadecimal')\n      effects.enter('characterReferenceValue')\n      max = 6\n      test = asciiHexDigit\n      return value\n    }\n\n    effects.enter('characterReferenceValue')\n    max = 7\n    test = asciiDigit\n    return value(code)\n  }\n\n  function value(code) {\n    var token\n\n    if (code === 59 && size) {\n      token = effects.exit('characterReferenceValue')\n\n      if (\n        test === asciiAlphanumeric &&\n        !decodeEntity__default['default'](self.sliceSerialize(token))\n      ) {\n        return nok(code)\n      }\n\n      effects.enter('characterReferenceMarker')\n      effects.consume(code)\n      effects.exit('characterReferenceMarker')\n      effects.exit('characterReference')\n      return ok\n    }\n\n    if (test(code) && size++ < max) {\n      effects.consume(code)\n      return value\n    }\n\n    return nok(code)\n  }\n}\n\nmodule.exports = characterReference\n","'use strict'\n\nvar regexCheck = require('../util/regex-check.js')\n\nvar asciiHexDigit = regexCheck(/[\\dA-Fa-f]/)\n\nmodule.exports = asciiHexDigit\n","'use strict'\n\nvar markdownLineEnding = require('../character/markdown-line-ending.js')\nvar markdownLineEndingOrSpace = require('../character/markdown-line-ending-or-space.js')\nvar prefixSize = require('../util/prefix-size.js')\nvar factorySpace = require('./factory-space.js')\n\nvar codeFenced = {\n  name: 'codeFenced',\n  tokenize: tokenizeCodeFenced,\n  concrete: true\n}\n\nfunction tokenizeCodeFenced(effects, ok, nok) {\n  var self = this\n  var closingFenceConstruct = {\n    tokenize: tokenizeClosingFence,\n    partial: true\n  }\n  var initialPrefix = prefixSize(this.events, 'linePrefix')\n  var sizeOpen = 0\n  var marker\n  return start\n\n  function start(code) {\n    effects.enter('codeFenced')\n    effects.enter('codeFencedFence')\n    effects.enter('codeFencedFenceSequence')\n    marker = code\n    return sequenceOpen(code)\n  }\n\n  function sequenceOpen(code) {\n    if (code === marker) {\n      effects.consume(code)\n      sizeOpen++\n      return sequenceOpen\n    }\n\n    effects.exit('codeFencedFenceSequence')\n    return sizeOpen < 3\n      ? nok(code)\n      : factorySpace(effects, infoOpen, 'whitespace')(code)\n  }\n\n  function infoOpen(code) {\n    if (code === null || markdownLineEnding(code)) {\n      return openAfter(code)\n    }\n\n    effects.enter('codeFencedFenceInfo')\n    effects.enter('chunkString', {\n      contentType: 'string'\n    })\n    return info(code)\n  }\n\n  function info(code) {\n    if (code === null || markdownLineEndingOrSpace(code)) {\n      effects.exit('chunkString')\n      effects.exit('codeFencedFenceInfo')\n      return factorySpace(effects, infoAfter, 'whitespace')(code)\n    }\n\n    if (code === 96 && code === marker) return nok(code)\n    effects.consume(code)\n    return info\n  }\n\n  function infoAfter(code) {\n    if (code === null || markdownLineEnding(code)) {\n      return openAfter(code)\n    }\n\n    effects.enter('codeFencedFenceMeta')\n    effects.enter('chunkString', {\n      contentType: 'string'\n    })\n    return meta(code)\n  }\n\n  function meta(code) {\n    if (code === null || markdownLineEnding(code)) {\n      effects.exit('chunkString')\n      effects.exit('codeFencedFenceMeta')\n      return openAfter(code)\n    }\n\n    if (code === 96 && code === marker) return nok(code)\n    effects.consume(code)\n    return meta\n  }\n\n  function openAfter(code) {\n    effects.exit('codeFencedFence')\n    return self.interrupt ? ok(code) : content(code)\n  }\n\n  function content(code) {\n    if (code === null) {\n      return after(code)\n    }\n\n    if (markdownLineEnding(code)) {\n      effects.enter('lineEnding')\n      effects.consume(code)\n      effects.exit('lineEnding')\n      return effects.attempt(\n        closingFenceConstruct,\n        after,\n        initialPrefix\n          ? factorySpace(effects, content, 'linePrefix', initialPrefix + 1)\n          : content\n      )\n    }\n\n    effects.enter('codeFlowValue')\n    return contentContinue(code)\n  }\n\n  function contentContinue(code) {\n    if (code === null || markdownLineEnding(code)) {\n      effects.exit('codeFlowValue')\n      return content(code)\n    }\n\n    effects.consume(code)\n    return contentContinue\n  }\n\n  function after(code) {\n    effects.exit('codeFenced')\n    return ok(code)\n  }\n\n  function tokenizeClosingFence(effects, ok, nok) {\n    var size = 0\n    return factorySpace(\n      effects,\n      closingSequenceStart,\n      'linePrefix',\n      this.parser.constructs.disable.null.indexOf('codeIndented') > -1\n        ? undefined\n        : 4\n    )\n\n    function closingSequenceStart(code) {\n      effects.enter('codeFencedFence')\n      effects.enter('codeFencedFenceSequence')\n      return closingSequence(code)\n    }\n\n    function closingSequence(code) {\n      if (code === marker) {\n        effects.consume(code)\n        size++\n        return closingSequence\n      }\n\n      if (size < sizeOpen) return nok(code)\n      effects.exit('codeFencedFenceSequence')\n      return factorySpace(effects, closingSequenceEnd, 'whitespace')(code)\n    }\n\n    function closingSequenceEnd(code) {\n      if (code === null || markdownLineEnding(code)) {\n        effects.exit('codeFencedFence')\n        return ok(code)\n      }\n\n      return nok(code)\n    }\n  }\n}\n\nmodule.exports = codeFenced\n","'use strict'\n\nvar markdownLineEnding = require('../character/markdown-line-ending.js')\nvar chunkedSplice = require('../util/chunked-splice.js')\nvar prefixSize = require('../util/prefix-size.js')\nvar factorySpace = require('./factory-space.js')\n\nvar codeIndented = {\n  name: 'codeIndented',\n  tokenize: tokenizeCodeIndented,\n  resolve: resolveCodeIndented\n}\nvar indentedContentConstruct = {\n  tokenize: tokenizeIndentedContent,\n  partial: true\n}\n\nfunction resolveCodeIndented(events, context) {\n  var code = {\n    type: 'codeIndented',\n    start: events[0][1].start,\n    end: events[events.length - 1][1].end\n  }\n  chunkedSplice(events, 0, 0, [['enter', code, context]])\n  chunkedSplice(events, events.length, 0, [['exit', code, context]])\n  return events\n}\n\nfunction tokenizeCodeIndented(effects, ok, nok) {\n  return effects.attempt(indentedContentConstruct, afterPrefix, nok)\n\n  function afterPrefix(code) {\n    if (code === null) {\n      return ok(code)\n    }\n\n    if (markdownLineEnding(code)) {\n      return effects.attempt(indentedContentConstruct, afterPrefix, ok)(code)\n    }\n\n    effects.enter('codeFlowValue')\n    return content(code)\n  }\n\n  function content(code) {\n    if (code === null || markdownLineEnding(code)) {\n      effects.exit('codeFlowValue')\n      return afterPrefix(code)\n    }\n\n    effects.consume(code)\n    return content\n  }\n}\n\nfunction tokenizeIndentedContent(effects, ok, nok) {\n  var self = this\n  return factorySpace(effects, afterPrefix, 'linePrefix', 4 + 1)\n\n  function afterPrefix(code) {\n    if (markdownLineEnding(code)) {\n      effects.enter('lineEnding')\n      effects.consume(code)\n      effects.exit('lineEnding')\n      return factorySpace(effects, afterPrefix, 'linePrefix', 4 + 1)\n    }\n\n    return prefixSize(self.events, 'linePrefix') < 4 ? nok(code) : ok(code)\n  }\n}\n\nmodule.exports = codeIndented\n","'use strict'\n\nvar markdownLineEnding = require('../character/markdown-line-ending.js')\n\nvar codeText = {\n  name: 'codeText',\n  tokenize: tokenizeCodeText,\n  resolve: resolveCodeText,\n  previous: previous\n}\n\nfunction resolveCodeText(events) {\n  var tailExitIndex = events.length - 4\n  var headEnterIndex = 3\n  var index\n  var enter // If we start and end with an EOL or a space.\n\n  if (\n    (events[headEnterIndex][1].type === 'lineEnding' ||\n      events[headEnterIndex][1].type === 'space') &&\n    (events[tailExitIndex][1].type === 'lineEnding' ||\n      events[tailExitIndex][1].type === 'space')\n  ) {\n    index = headEnterIndex // And we have data.\n\n    while (++index < tailExitIndex) {\n      if (events[index][1].type === 'codeTextData') {\n        // Then we have padding.\n        events[tailExitIndex][1].type = events[headEnterIndex][1].type =\n          'codeTextPadding'\n        headEnterIndex += 2\n        tailExitIndex -= 2\n        break\n      }\n    }\n  } // Merge adjacent spaces and data.\n\n  index = headEnterIndex - 1\n  tailExitIndex++\n\n  while (++index <= tailExitIndex) {\n    if (enter === undefined) {\n      if (index !== tailExitIndex && events[index][1].type !== 'lineEnding') {\n        enter = index\n      }\n    } else if (\n      index === tailExitIndex ||\n      events[index][1].type === 'lineEnding'\n    ) {\n      events[enter][1].type = 'codeTextData'\n\n      if (index !== enter + 2) {\n        events[enter][1].end = events[index - 1][1].end\n        events.splice(enter + 2, index - enter - 2)\n        tailExitIndex -= index - enter - 2\n        index = enter + 2\n      }\n\n      enter = undefined\n    }\n  }\n\n  return events\n}\n\nfunction previous(code) {\n  // If there is a previous code, there will always be a tail.\n  return (\n    code !== 96 ||\n    this.events[this.events.length - 1][1].type === 'characterEscape'\n  )\n}\n\nfunction tokenizeCodeText(effects, ok, nok) {\n  var sizeOpen = 0\n  var size\n  var token\n  return start\n\n  function start(code) {\n    effects.enter('codeText')\n    effects.enter('codeTextSequence')\n    return openingSequence(code)\n  }\n\n  function openingSequence(code) {\n    if (code === 96) {\n      effects.consume(code)\n      sizeOpen++\n      return openingSequence\n    }\n\n    effects.exit('codeTextSequence')\n    return gap(code)\n  }\n\n  function gap(code) {\n    // EOF.\n    if (code === null) {\n      return nok(code)\n    } // Closing fence?\n    // Could also be data.\n\n    if (code === 96) {\n      token = effects.enter('codeTextSequence')\n      size = 0\n      return closingSequence(code)\n    } // Tabs don’t work, and virtual spaces don’t make sense.\n\n    if (code === 32) {\n      effects.enter('space')\n      effects.consume(code)\n      effects.exit('space')\n      return gap\n    }\n\n    if (markdownLineEnding(code)) {\n      effects.enter('lineEnding')\n      effects.consume(code)\n      effects.exit('lineEnding')\n      return gap\n    } // Data.\n\n    effects.enter('codeTextData')\n    return data(code)\n  } // In code.\n\n  function data(code) {\n    if (\n      code === null ||\n      code === 32 ||\n      code === 96 ||\n      markdownLineEnding(code)\n    ) {\n      effects.exit('codeTextData')\n      return gap(code)\n    }\n\n    effects.consume(code)\n    return data\n  } // Closing fence.\n\n  function closingSequence(code) {\n    // More.\n    if (code === 96) {\n      effects.consume(code)\n      size++\n      return closingSequence\n    } // Done!\n\n    if (size === sizeOpen) {\n      effects.exit('codeTextSequence')\n      effects.exit('codeText')\n      return ok(code)\n    } // More or less accents: mark as data.\n\n    token.type = 'codeTextData'\n    return data(code)\n  }\n}\n\nmodule.exports = codeText\n","'use strict'\n\nvar markdownLineEnding = require('../character/markdown-line-ending.js')\nvar markdownLineEndingOrSpace = require('../character/markdown-line-ending-or-space.js')\nvar normalizeIdentifier = require('../util/normalize-identifier.js')\nvar factoryDestination = require('./factory-destination.js')\nvar factoryLabel = require('./factory-label.js')\nvar factorySpace = require('./factory-space.js')\nvar factoryWhitespace = require('./factory-whitespace.js')\nvar factoryTitle = require('./factory-title.js')\n\nvar definition = {\n  name: 'definition',\n  tokenize: tokenizeDefinition\n}\nvar titleConstruct = {\n  tokenize: tokenizeTitle,\n  partial: true\n}\n\nfunction tokenizeDefinition(effects, ok, nok) {\n  var self = this\n  var identifier\n  return start\n\n  function start(code) {\n    effects.enter('definition')\n    return factoryLabel.call(\n      self,\n      effects,\n      labelAfter,\n      nok,\n      'definitionLabel',\n      'definitionLabelMarker',\n      'definitionLabelString'\n    )(code)\n  }\n\n  function labelAfter(code) {\n    identifier = normalizeIdentifier(\n      self.sliceSerialize(self.events[self.events.length - 1][1]).slice(1, -1)\n    )\n\n    if (code === 58) {\n      effects.enter('definitionMarker')\n      effects.consume(code)\n      effects.exit('definitionMarker') // Note: blank lines can’t exist in content.\n\n      return factoryWhitespace(\n        effects,\n        factoryDestination(\n          effects,\n          effects.attempt(\n            titleConstruct,\n            factorySpace(effects, after, 'whitespace'),\n            factorySpace(effects, after, 'whitespace')\n          ),\n          nok,\n          'definitionDestination',\n          'definitionDestinationLiteral',\n          'definitionDestinationLiteralMarker',\n          'definitionDestinationRaw',\n          'definitionDestinationString'\n        )\n      )\n    }\n\n    return nok(code)\n  }\n\n  function after(code) {\n    if (code === null || markdownLineEnding(code)) {\n      effects.exit('definition')\n\n      if (self.parser.defined.indexOf(identifier) < 0) {\n        self.parser.defined.push(identifier)\n      }\n\n      return ok(code)\n    }\n\n    return nok(code)\n  }\n}\n\nfunction tokenizeTitle(effects, ok, nok) {\n  return start\n\n  function start(code) {\n    return markdownLineEndingOrSpace(code)\n      ? factoryWhitespace(effects, before)(code)\n      : nok(code)\n  }\n\n  function before(code) {\n    if (code === 34 || code === 39 || code === 40) {\n      return factoryTitle(\n        effects,\n        factorySpace(effects, after, 'whitespace'),\n        nok,\n        'definitionTitle',\n        'definitionTitleMarker',\n        'definitionTitleString'\n      )(code)\n    }\n\n    return nok(code)\n  }\n\n  function after(code) {\n    return code === null || markdownLineEnding(code) ? ok(code) : nok(code)\n  }\n}\n\nmodule.exports = definition\n","'use strict'\n\nvar markdownLineEnding = require('../character/markdown-line-ending.js')\n\nvar hardBreakEscape = {\n  name: 'hardBreakEscape',\n  tokenize: tokenizeHardBreakEscape\n}\n\nfunction tokenizeHardBreakEscape(effects, ok, nok) {\n  return start\n\n  function start(code) {\n    effects.enter('hardBreakEscape')\n    effects.enter('escapeMarker')\n    effects.consume(code)\n    return open\n  }\n\n  function open(code) {\n    if (markdownLineEnding(code)) {\n      effects.exit('escapeMarker')\n      effects.exit('hardBreakEscape')\n      return ok(code)\n    }\n\n    return nok(code)\n  }\n}\n\nmodule.exports = hardBreakEscape\n","'use strict'\n\nvar markdownLineEnding = require('../character/markdown-line-ending.js')\nvar markdownLineEndingOrSpace = require('../character/markdown-line-ending-or-space.js')\nvar markdownSpace = require('../character/markdown-space.js')\nvar chunkedSplice = require('../util/chunked-splice.js')\nvar factorySpace = require('./factory-space.js')\n\nvar headingAtx = {\n  name: 'headingAtx',\n  tokenize: tokenizeHeadingAtx,\n  resolve: resolveHeadingAtx\n}\n\nfunction resolveHeadingAtx(events, context) {\n  var contentEnd = events.length - 2\n  var contentStart = 3\n  var content\n  var text // Prefix whitespace, part of the opening.\n\n  if (events[contentStart][1].type === 'whitespace') {\n    contentStart += 2\n  } // Suffix whitespace, part of the closing.\n\n  if (\n    contentEnd - 2 > contentStart &&\n    events[contentEnd][1].type === 'whitespace'\n  ) {\n    contentEnd -= 2\n  }\n\n  if (\n    events[contentEnd][1].type === 'atxHeadingSequence' &&\n    (contentStart === contentEnd - 1 ||\n      (contentEnd - 4 > contentStart &&\n        events[contentEnd - 2][1].type === 'whitespace'))\n  ) {\n    contentEnd -= contentStart + 1 === contentEnd ? 2 : 4\n  }\n\n  if (contentEnd > contentStart) {\n    content = {\n      type: 'atxHeadingText',\n      start: events[contentStart][1].start,\n      end: events[contentEnd][1].end\n    }\n    text = {\n      type: 'chunkText',\n      start: events[contentStart][1].start,\n      end: events[contentEnd][1].end,\n      contentType: 'text'\n    }\n    chunkedSplice(events, contentStart, contentEnd - contentStart + 1, [\n      ['enter', content, context],\n      ['enter', text, context],\n      ['exit', text, context],\n      ['exit', content, context]\n    ])\n  }\n\n  return events\n}\n\nfunction tokenizeHeadingAtx(effects, ok, nok) {\n  var self = this\n  var size = 0\n  return start\n\n  function start(code) {\n    effects.enter('atxHeading')\n    effects.enter('atxHeadingSequence')\n    return fenceOpenInside(code)\n  }\n\n  function fenceOpenInside(code) {\n    if (code === 35 && size++ < 6) {\n      effects.consume(code)\n      return fenceOpenInside\n    }\n\n    if (code === null || markdownLineEndingOrSpace(code)) {\n      effects.exit('atxHeadingSequence')\n      return self.interrupt ? ok(code) : headingBreak(code)\n    }\n\n    return nok(code)\n  }\n\n  function headingBreak(code) {\n    if (code === 35) {\n      effects.enter('atxHeadingSequence')\n      return sequence(code)\n    }\n\n    if (code === null || markdownLineEnding(code)) {\n      effects.exit('atxHeading')\n      return ok(code)\n    }\n\n    if (markdownSpace(code)) {\n      return factorySpace(effects, headingBreak, 'whitespace')(code)\n    }\n\n    effects.enter('atxHeadingText')\n    return data(code)\n  }\n\n  function sequence(code) {\n    if (code === 35) {\n      effects.consume(code)\n      return sequence\n    }\n\n    effects.exit('atxHeadingSequence')\n    return headingBreak(code)\n  }\n\n  function data(code) {\n    if (code === null || code === 35 || markdownLineEndingOrSpace(code)) {\n      effects.exit('atxHeadingText')\n      return headingBreak(code)\n    }\n\n    effects.consume(code)\n    return data\n  }\n}\n\nmodule.exports = headingAtx\n","'use strict'\n\nvar asciiAlpha = require('../character/ascii-alpha.js')\nvar asciiAlphanumeric = require('../character/ascii-alphanumeric.js')\nvar markdownLineEnding = require('../character/markdown-line-ending.js')\nvar markdownLineEndingOrSpace = require('../character/markdown-line-ending-or-space.js')\nvar markdownSpace = require('../character/markdown-space.js')\nvar fromCharCode = require('../constant/from-char-code.js')\nvar htmlBlockNames = require('../constant/html-block-names.js')\nvar htmlRawNames = require('../constant/html-raw-names.js')\nvar partialBlankLine = require('./partial-blank-line.js')\n\nvar htmlFlow = {\n  name: 'htmlFlow',\n  tokenize: tokenizeHtmlFlow,\n  resolveTo: resolveToHtmlFlow,\n  concrete: true\n}\nvar nextBlankConstruct = {\n  tokenize: tokenizeNextBlank,\n  partial: true\n}\n\nfunction resolveToHtmlFlow(events) {\n  var index = events.length\n\n  while (index--) {\n    if (events[index][0] === 'enter' && events[index][1].type === 'htmlFlow') {\n      break\n    }\n  }\n\n  if (index > 1 && events[index - 2][1].type === 'linePrefix') {\n    // Add the prefix start to the HTML token.\n    events[index][1].start = events[index - 2][1].start // Add the prefix start to the HTML line token.\n\n    events[index + 1][1].start = events[index - 2][1].start // Remove the line prefix.\n\n    events.splice(index - 2, 2)\n  }\n\n  return events\n}\n\nfunction tokenizeHtmlFlow(effects, ok, nok) {\n  var self = this\n  var kind\n  var startTag\n  var buffer\n  var index\n  var marker\n  return start\n\n  function start(code) {\n    effects.enter('htmlFlow')\n    effects.enter('htmlFlowData')\n    effects.consume(code)\n    return open\n  }\n\n  function open(code) {\n    if (code === 33) {\n      effects.consume(code)\n      return declarationStart\n    }\n\n    if (code === 47) {\n      effects.consume(code)\n      return tagCloseStart\n    }\n\n    if (code === 63) {\n      effects.consume(code)\n      kind = 3 // While we’re in an instruction instead of a declaration, we’re on a `?`\n      // right now, so we do need to search for `>`, similar to declarations.\n\n      return self.interrupt ? ok : continuationDeclarationInside\n    }\n\n    if (asciiAlpha(code)) {\n      effects.consume(code)\n      buffer = fromCharCode(code)\n      startTag = true\n      return tagName\n    }\n\n    return nok(code)\n  }\n\n  function declarationStart(code) {\n    if (code === 45) {\n      effects.consume(code)\n      kind = 2\n      return commentOpenInside\n    }\n\n    if (code === 91) {\n      effects.consume(code)\n      kind = 5\n      buffer = 'CDATA['\n      index = 0\n      return cdataOpenInside\n    }\n\n    if (asciiAlpha(code)) {\n      effects.consume(code)\n      kind = 4\n      return self.interrupt ? ok : continuationDeclarationInside\n    }\n\n    return nok(code)\n  }\n\n  function commentOpenInside(code) {\n    if (code === 45) {\n      effects.consume(code)\n      return self.interrupt ? ok : continuationDeclarationInside\n    }\n\n    return nok(code)\n  }\n\n  function cdataOpenInside(code) {\n    if (code === buffer.charCodeAt(index++)) {\n      effects.consume(code)\n      return index === buffer.length\n        ? self.interrupt\n          ? ok\n          : continuation\n        : cdataOpenInside\n    }\n\n    return nok(code)\n  }\n\n  function tagCloseStart(code) {\n    if (asciiAlpha(code)) {\n      effects.consume(code)\n      buffer = fromCharCode(code)\n      return tagName\n    }\n\n    return nok(code)\n  }\n\n  function tagName(code) {\n    if (\n      code === null ||\n      code === 47 ||\n      code === 62 ||\n      markdownLineEndingOrSpace(code)\n    ) {\n      if (\n        code !== 47 &&\n        startTag &&\n        htmlRawNames.indexOf(buffer.toLowerCase()) > -1\n      ) {\n        kind = 1\n        return self.interrupt ? ok(code) : continuation(code)\n      }\n\n      if (htmlBlockNames.indexOf(buffer.toLowerCase()) > -1) {\n        kind = 6\n\n        if (code === 47) {\n          effects.consume(code)\n          return basicSelfClosing\n        }\n\n        return self.interrupt ? ok(code) : continuation(code)\n      }\n\n      kind = 7 // Do not support complete HTML when interrupting.\n\n      return self.interrupt\n        ? nok(code)\n        : startTag\n        ? completeAttributeNameBefore(code)\n        : completeClosingTagAfter(code)\n    }\n\n    if (code === 45 || asciiAlphanumeric(code)) {\n      effects.consume(code)\n      buffer += fromCharCode(code)\n      return tagName\n    }\n\n    return nok(code)\n  }\n\n  function basicSelfClosing(code) {\n    if (code === 62) {\n      effects.consume(code)\n      return self.interrupt ? ok : continuation\n    }\n\n    return nok(code)\n  }\n\n  function completeClosingTagAfter(code) {\n    if (markdownSpace(code)) {\n      effects.consume(code)\n      return completeClosingTagAfter\n    }\n\n    return completeEnd(code)\n  }\n\n  function completeAttributeNameBefore(code) {\n    if (code === 47) {\n      effects.consume(code)\n      return completeEnd\n    }\n\n    if (code === 58 || code === 95 || asciiAlpha(code)) {\n      effects.consume(code)\n      return completeAttributeName\n    }\n\n    if (markdownSpace(code)) {\n      effects.consume(code)\n      return completeAttributeNameBefore\n    }\n\n    return completeEnd(code)\n  }\n\n  function completeAttributeName(code) {\n    if (\n      code === 45 ||\n      code === 46 ||\n      code === 58 ||\n      code === 95 ||\n      asciiAlphanumeric(code)\n    ) {\n      effects.consume(code)\n      return completeAttributeName\n    }\n\n    return completeAttributeNameAfter(code)\n  }\n\n  function completeAttributeNameAfter(code) {\n    if (code === 61) {\n      effects.consume(code)\n      return completeAttributeValueBefore\n    }\n\n    if (markdownSpace(code)) {\n      effects.consume(code)\n      return completeAttributeNameAfter\n    }\n\n    return completeAttributeNameBefore(code)\n  }\n\n  function completeAttributeValueBefore(code) {\n    if (\n      code === null ||\n      code === 60 ||\n      code === 61 ||\n      code === 62 ||\n      code === 96\n    ) {\n      return nok(code)\n    }\n\n    if (code === 34 || code === 39) {\n      effects.consume(code)\n      marker = code\n      return completeAttributeValueQuoted\n    }\n\n    if (markdownSpace(code)) {\n      effects.consume(code)\n      return completeAttributeValueBefore\n    }\n\n    marker = undefined\n    return completeAttributeValueUnquoted(code)\n  }\n\n  function completeAttributeValueQuoted(code) {\n    if (code === marker) {\n      effects.consume(code)\n      return completeAttributeValueQuotedAfter\n    }\n\n    if (code === null || markdownLineEnding(code)) {\n      return nok(code)\n    }\n\n    effects.consume(code)\n    return completeAttributeValueQuoted\n  }\n\n  function completeAttributeValueUnquoted(code) {\n    if (\n      code === null ||\n      code === 34 ||\n      code === 39 ||\n      code === 60 ||\n      code === 61 ||\n      code === 62 ||\n      code === 96 ||\n      markdownLineEndingOrSpace(code)\n    ) {\n      return completeAttributeNameAfter(code)\n    }\n\n    effects.consume(code)\n    return completeAttributeValueUnquoted\n  }\n\n  function completeAttributeValueQuotedAfter(code) {\n    if (code === 47 || code === 62 || markdownSpace(code)) {\n      return completeAttributeNameBefore(code)\n    }\n\n    return nok(code)\n  }\n\n  function completeEnd(code) {\n    if (code === 62) {\n      effects.consume(code)\n      return completeAfter\n    }\n\n    return nok(code)\n  }\n\n  function completeAfter(code) {\n    if (markdownSpace(code)) {\n      effects.consume(code)\n      return completeAfter\n    }\n\n    return code === null || markdownLineEnding(code)\n      ? continuation(code)\n      : nok(code)\n  }\n\n  function continuation(code) {\n    if (code === 45 && kind === 2) {\n      effects.consume(code)\n      return continuationCommentInside\n    }\n\n    if (code === 60 && kind === 1) {\n      effects.consume(code)\n      return continuationRawTagOpen\n    }\n\n    if (code === 62 && kind === 4) {\n      effects.consume(code)\n      return continuationClose\n    }\n\n    if (code === 63 && kind === 3) {\n      effects.consume(code)\n      return continuationDeclarationInside\n    }\n\n    if (code === 93 && kind === 5) {\n      effects.consume(code)\n      return continuationCharacterDataInside\n    }\n\n    if (markdownLineEnding(code) && (kind === 6 || kind === 7)) {\n      return effects.check(\n        nextBlankConstruct,\n        continuationClose,\n        continuationAtLineEnding\n      )(code)\n    }\n\n    if (code === null || markdownLineEnding(code)) {\n      return continuationAtLineEnding(code)\n    }\n\n    effects.consume(code)\n    return continuation\n  }\n\n  function continuationAtLineEnding(code) {\n    effects.exit('htmlFlowData')\n    return htmlContinueStart(code)\n  }\n\n  function htmlContinueStart(code) {\n    if (code === null) {\n      return done(code)\n    }\n\n    if (markdownLineEnding(code)) {\n      effects.enter('lineEnding')\n      effects.consume(code)\n      effects.exit('lineEnding')\n      return htmlContinueStart\n    }\n\n    effects.enter('htmlFlowData')\n    return continuation(code)\n  }\n\n  function continuationCommentInside(code) {\n    if (code === 45) {\n      effects.consume(code)\n      return continuationDeclarationInside\n    }\n\n    return continuation(code)\n  }\n\n  function continuationRawTagOpen(code) {\n    if (code === 47) {\n      effects.consume(code)\n      buffer = ''\n      return continuationRawEndTag\n    }\n\n    return continuation(code)\n  }\n\n  function continuationRawEndTag(code) {\n    if (code === 62 && htmlRawNames.indexOf(buffer.toLowerCase()) > -1) {\n      effects.consume(code)\n      return continuationClose\n    }\n\n    if (asciiAlpha(code) && buffer.length < 8) {\n      effects.consume(code)\n      buffer += fromCharCode(code)\n      return continuationRawEndTag\n    }\n\n    return continuation(code)\n  }\n\n  function continuationCharacterDataInside(code) {\n    if (code === 93) {\n      effects.consume(code)\n      return continuationDeclarationInside\n    }\n\n    return continuation(code)\n  }\n\n  function continuationDeclarationInside(code) {\n    if (code === 62) {\n      effects.consume(code)\n      return continuationClose\n    }\n\n    return continuation(code)\n  }\n\n  function continuationClose(code) {\n    if (code === null || markdownLineEnding(code)) {\n      effects.exit('htmlFlowData')\n      return done(code)\n    }\n\n    effects.consume(code)\n    return continuationClose\n  }\n\n  function done(code) {\n    effects.exit('htmlFlow')\n    return ok(code)\n  }\n}\n\nfunction tokenizeNextBlank(effects, ok, nok) {\n  return start\n\n  function start(code) {\n    effects.exit('htmlFlowData')\n    effects.enter('lineEndingBlank')\n    effects.consume(code)\n    effects.exit('lineEndingBlank')\n    return effects.attempt(partialBlankLine, ok, nok)\n  }\n}\n\nmodule.exports = htmlFlow\n","'use strict'\n\n// This module is copied from <https://spec.commonmark.org/0.29/#html-blocks>.\nvar basics = [\n  'address',\n  'article',\n  'aside',\n  'base',\n  'basefont',\n  'blockquote',\n  'body',\n  'caption',\n  'center',\n  'col',\n  'colgroup',\n  'dd',\n  'details',\n  'dialog',\n  'dir',\n  'div',\n  'dl',\n  'dt',\n  'fieldset',\n  'figcaption',\n  'figure',\n  'footer',\n  'form',\n  'frame',\n  'frameset',\n  'h1',\n  'h2',\n  'h3',\n  'h4',\n  'h5',\n  'h6',\n  'head',\n  'header',\n  'hr',\n  'html',\n  'iframe',\n  'legend',\n  'li',\n  'link',\n  'main',\n  'menu',\n  'menuitem',\n  'nav',\n  'noframes',\n  'ol',\n  'optgroup',\n  'option',\n  'p',\n  'param',\n  'section',\n  'source',\n  'summary',\n  'table',\n  'tbody',\n  'td',\n  'tfoot',\n  'th',\n  'thead',\n  'title',\n  'tr',\n  'track',\n  'ul'\n]\n\nmodule.exports = basics\n","'use strict'\n\n// This module is copied from <https://spec.commonmark.org/0.29/#html-blocks>.\nvar raws = ['pre', 'script', 'style', 'textarea']\n\nmodule.exports = raws\n","'use strict'\n\nvar asciiAlpha = require('../character/ascii-alpha.js')\nvar asciiAlphanumeric = require('../character/ascii-alphanumeric.js')\nvar markdownLineEnding = require('../character/markdown-line-ending.js')\nvar markdownLineEndingOrSpace = require('../character/markdown-line-ending-or-space.js')\nvar markdownSpace = require('../character/markdown-space.js')\nvar factorySpace = require('./factory-space.js')\n\nvar htmlText = {\n  name: 'htmlText',\n  tokenize: tokenizeHtmlText\n}\n\nfunction tokenizeHtmlText(effects, ok, nok) {\n  var self = this\n  var marker\n  var buffer\n  var index\n  var returnState\n  return start\n\n  function start(code) {\n    effects.enter('htmlText')\n    effects.enter('htmlTextData')\n    effects.consume(code)\n    return open\n  }\n\n  function open(code) {\n    if (code === 33) {\n      effects.consume(code)\n      return declarationOpen\n    }\n\n    if (code === 47) {\n      effects.consume(code)\n      return tagCloseStart\n    }\n\n    if (code === 63) {\n      effects.consume(code)\n      return instruction\n    }\n\n    if (asciiAlpha(code)) {\n      effects.consume(code)\n      return tagOpen\n    }\n\n    return nok(code)\n  }\n\n  function declarationOpen(code) {\n    if (code === 45) {\n      effects.consume(code)\n      return commentOpen\n    }\n\n    if (code === 91) {\n      effects.consume(code)\n      buffer = 'CDATA['\n      index = 0\n      return cdataOpen\n    }\n\n    if (asciiAlpha(code)) {\n      effects.consume(code)\n      return declaration\n    }\n\n    return nok(code)\n  }\n\n  function commentOpen(code) {\n    if (code === 45) {\n      effects.consume(code)\n      return commentStart\n    }\n\n    return nok(code)\n  }\n\n  function commentStart(code) {\n    if (code === null || code === 62) {\n      return nok(code)\n    }\n\n    if (code === 45) {\n      effects.consume(code)\n      return commentStartDash\n    }\n\n    return comment(code)\n  }\n\n  function commentStartDash(code) {\n    if (code === null || code === 62) {\n      return nok(code)\n    }\n\n    return comment(code)\n  }\n\n  function comment(code) {\n    if (code === null) {\n      return nok(code)\n    }\n\n    if (code === 45) {\n      effects.consume(code)\n      return commentClose\n    }\n\n    if (markdownLineEnding(code)) {\n      returnState = comment\n      return atLineEnding(code)\n    }\n\n    effects.consume(code)\n    return comment\n  }\n\n  function commentClose(code) {\n    if (code === 45) {\n      effects.consume(code)\n      return end\n    }\n\n    return comment(code)\n  }\n\n  function cdataOpen(code) {\n    if (code === buffer.charCodeAt(index++)) {\n      effects.consume(code)\n      return index === buffer.length ? cdata : cdataOpen\n    }\n\n    return nok(code)\n  }\n\n  function cdata(code) {\n    if (code === null) {\n      return nok(code)\n    }\n\n    if (code === 93) {\n      effects.consume(code)\n      return cdataClose\n    }\n\n    if (markdownLineEnding(code)) {\n      returnState = cdata\n      return atLineEnding(code)\n    }\n\n    effects.consume(code)\n    return cdata\n  }\n\n  function cdataClose(code) {\n    if (code === 93) {\n      effects.consume(code)\n      return cdataEnd\n    }\n\n    return cdata(code)\n  }\n\n  function cdataEnd(code) {\n    if (code === 62) {\n      return end(code)\n    }\n\n    if (code === 93) {\n      effects.consume(code)\n      return cdataEnd\n    }\n\n    return cdata(code)\n  }\n\n  function declaration(code) {\n    if (code === null || code === 62) {\n      return end(code)\n    }\n\n    if (markdownLineEnding(code)) {\n      returnState = declaration\n      return atLineEnding(code)\n    }\n\n    effects.consume(code)\n    return declaration\n  }\n\n  function instruction(code) {\n    if (code === null) {\n      return nok(code)\n    }\n\n    if (code === 63) {\n      effects.consume(code)\n      return instructionClose\n    }\n\n    if (markdownLineEnding(code)) {\n      returnState = instruction\n      return atLineEnding(code)\n    }\n\n    effects.consume(code)\n    return instruction\n  }\n\n  function instructionClose(code) {\n    return code === 62 ? end(code) : instruction(code)\n  }\n\n  function tagCloseStart(code) {\n    if (asciiAlpha(code)) {\n      effects.consume(code)\n      return tagClose\n    }\n\n    return nok(code)\n  }\n\n  function tagClose(code) {\n    if (code === 45 || asciiAlphanumeric(code)) {\n      effects.consume(code)\n      return tagClose\n    }\n\n    return tagCloseBetween(code)\n  }\n\n  function tagCloseBetween(code) {\n    if (markdownLineEnding(code)) {\n      returnState = tagCloseBetween\n      return atLineEnding(code)\n    }\n\n    if (markdownSpace(code)) {\n      effects.consume(code)\n      return tagCloseBetween\n    }\n\n    return end(code)\n  }\n\n  function tagOpen(code) {\n    if (code === 45 || asciiAlphanumeric(code)) {\n      effects.consume(code)\n      return tagOpen\n    }\n\n    if (code === 47 || code === 62 || markdownLineEndingOrSpace(code)) {\n      return tagOpenBetween(code)\n    }\n\n    return nok(code)\n  }\n\n  function tagOpenBetween(code) {\n    if (code === 47) {\n      effects.consume(code)\n      return end\n    }\n\n    if (code === 58 || code === 95 || asciiAlpha(code)) {\n      effects.consume(code)\n      return tagOpenAttributeName\n    }\n\n    if (markdownLineEnding(code)) {\n      returnState = tagOpenBetween\n      return atLineEnding(code)\n    }\n\n    if (markdownSpace(code)) {\n      effects.consume(code)\n      return tagOpenBetween\n    }\n\n    return end(code)\n  }\n\n  function tagOpenAttributeName(code) {\n    if (\n      code === 45 ||\n      code === 46 ||\n      code === 58 ||\n      code === 95 ||\n      asciiAlphanumeric(code)\n    ) {\n      effects.consume(code)\n      return tagOpenAttributeName\n    }\n\n    return tagOpenAttributeNameAfter(code)\n  }\n\n  function tagOpenAttributeNameAfter(code) {\n    if (code === 61) {\n      effects.consume(code)\n      return tagOpenAttributeValueBefore\n    }\n\n    if (markdownLineEnding(code)) {\n      returnState = tagOpenAttributeNameAfter\n      return atLineEnding(code)\n    }\n\n    if (markdownSpace(code)) {\n      effects.consume(code)\n      return tagOpenAttributeNameAfter\n    }\n\n    return tagOpenBetween(code)\n  }\n\n  function tagOpenAttributeValueBefore(code) {\n    if (\n      code === null ||\n      code === 60 ||\n      code === 61 ||\n      code === 62 ||\n      code === 96\n    ) {\n      return nok(code)\n    }\n\n    if (code === 34 || code === 39) {\n      effects.consume(code)\n      marker = code\n      return tagOpenAttributeValueQuoted\n    }\n\n    if (markdownLineEnding(code)) {\n      returnState = tagOpenAttributeValueBefore\n      return atLineEnding(code)\n    }\n\n    if (markdownSpace(code)) {\n      effects.consume(code)\n      return tagOpenAttributeValueBefore\n    }\n\n    effects.consume(code)\n    marker = undefined\n    return tagOpenAttributeValueUnquoted\n  }\n\n  function tagOpenAttributeValueQuoted(code) {\n    if (code === marker) {\n      effects.consume(code)\n      return tagOpenAttributeValueQuotedAfter\n    }\n\n    if (code === null) {\n      return nok(code)\n    }\n\n    if (markdownLineEnding(code)) {\n      returnState = tagOpenAttributeValueQuoted\n      return atLineEnding(code)\n    }\n\n    effects.consume(code)\n    return tagOpenAttributeValueQuoted\n  }\n\n  function tagOpenAttributeValueQuotedAfter(code) {\n    if (code === 62 || code === 47 || markdownLineEndingOrSpace(code)) {\n      return tagOpenBetween(code)\n    }\n\n    return nok(code)\n  }\n\n  function tagOpenAttributeValueUnquoted(code) {\n    if (\n      code === null ||\n      code === 34 ||\n      code === 39 ||\n      code === 60 ||\n      code === 61 ||\n      code === 96\n    ) {\n      return nok(code)\n    }\n\n    if (code === 62 || markdownLineEndingOrSpace(code)) {\n      return tagOpenBetween(code)\n    }\n\n    effects.consume(code)\n    return tagOpenAttributeValueUnquoted\n  } // We can’t have blank lines in content, so no need to worry about empty\n  // tokens.\n\n  function atLineEnding(code) {\n    effects.exit('htmlTextData')\n    effects.enter('lineEnding')\n    effects.consume(code)\n    effects.exit('lineEnding')\n    return factorySpace(\n      effects,\n      afterPrefix,\n      'linePrefix',\n      self.parser.constructs.disable.null.indexOf('codeIndented') > -1\n        ? undefined\n        : 4\n    )\n  }\n\n  function afterPrefix(code) {\n    effects.enter('htmlTextData')\n    return returnState(code)\n  }\n\n  function end(code) {\n    if (code === 62) {\n      effects.consume(code)\n      effects.exit('htmlTextData')\n      effects.exit('htmlText')\n      return ok\n    }\n\n    return nok(code)\n  }\n}\n\nmodule.exports = htmlText\n","'use strict'\n\nvar labelEnd = require('./label-end.js')\n\nvar labelStartImage = {\n  name: 'labelStartImage',\n  tokenize: tokenizeLabelStartImage,\n  resolveAll: labelEnd.resolveAll\n}\n\nfunction tokenizeLabelStartImage(effects, ok, nok) {\n  var self = this\n  return start\n\n  function start(code) {\n    effects.enter('labelImage')\n    effects.enter('labelImageMarker')\n    effects.consume(code)\n    effects.exit('labelImageMarker')\n    return open\n  }\n\n  function open(code) {\n    if (code === 91) {\n      effects.enter('labelMarker')\n      effects.consume(code)\n      effects.exit('labelMarker')\n      effects.exit('labelImage')\n      return after\n    }\n\n    return nok(code)\n  }\n\n  function after(code) {\n    /* c8 ignore next */\n    return code === 94 &&\n      /* c8 ignore next */\n      '_hiddenFootnoteSupport' in self.parser.constructs\n      ? /* c8 ignore next */\n        nok(code)\n      : ok(code)\n  }\n}\n\nmodule.exports = labelStartImage\n","'use strict'\n\nvar labelEnd = require('./label-end.js')\n\nvar labelStartLink = {\n  name: 'labelStartLink',\n  tokenize: tokenizeLabelStartLink,\n  resolveAll: labelEnd.resolveAll\n}\n\nfunction tokenizeLabelStartLink(effects, ok, nok) {\n  var self = this\n  return start\n\n  function start(code) {\n    effects.enter('labelLink')\n    effects.enter('labelMarker')\n    effects.consume(code)\n    effects.exit('labelMarker')\n    effects.exit('labelLink')\n    return after\n  }\n\n  function after(code) {\n    /* c8 ignore next */\n    return code === 94 &&\n      /* c8 ignore next */\n      '_hiddenFootnoteSupport' in self.parser.constructs\n      ? /* c8 ignore next */\n        nok(code)\n      : ok(code)\n  }\n}\n\nmodule.exports = labelStartLink\n","'use strict'\n\nvar factorySpace = require('./factory-space.js')\n\nvar lineEnding = {\n  name: 'lineEnding',\n  tokenize: tokenizeLineEnding\n}\n\nfunction tokenizeLineEnding(effects, ok) {\n  return start\n\n  function start(code) {\n    effects.enter('lineEnding')\n    effects.consume(code)\n    effects.exit('lineEnding')\n    return factorySpace(effects, ok, 'linePrefix')\n  }\n}\n\nmodule.exports = lineEnding\n","'use strict'\n\nvar asciiDigit = require('../character/ascii-digit.js')\nvar markdownSpace = require('../character/markdown-space.js')\nvar prefixSize = require('../util/prefix-size.js')\nvar sizeChunks = require('../util/size-chunks.js')\nvar factorySpace = require('./factory-space.js')\nvar partialBlankLine = require('./partial-blank-line.js')\nvar thematicBreak = require('./thematic-break.js')\n\nvar list = {\n  name: 'list',\n  tokenize: tokenizeListStart,\n  continuation: {\n    tokenize: tokenizeListContinuation\n  },\n  exit: tokenizeListEnd\n}\nvar listItemPrefixWhitespaceConstruct = {\n  tokenize: tokenizeListItemPrefixWhitespace,\n  partial: true\n}\nvar indentConstruct = {\n  tokenize: tokenizeIndent,\n  partial: true\n}\n\nfunction tokenizeListStart(effects, ok, nok) {\n  var self = this\n  var initialSize = prefixSize(self.events, 'linePrefix')\n  var size = 0\n  return start\n\n  function start(code) {\n    var kind =\n      self.containerState.type ||\n      (code === 42 || code === 43 || code === 45\n        ? 'listUnordered'\n        : 'listOrdered')\n\n    if (\n      kind === 'listUnordered'\n        ? !self.containerState.marker || code === self.containerState.marker\n        : asciiDigit(code)\n    ) {\n      if (!self.containerState.type) {\n        self.containerState.type = kind\n        effects.enter(kind, {\n          _container: true\n        })\n      }\n\n      if (kind === 'listUnordered') {\n        effects.enter('listItemPrefix')\n        return code === 42 || code === 45\n          ? effects.check(thematicBreak, nok, atMarker)(code)\n          : atMarker(code)\n      }\n\n      if (!self.interrupt || code === 49) {\n        effects.enter('listItemPrefix')\n        effects.enter('listItemValue')\n        return inside(code)\n      }\n    }\n\n    return nok(code)\n  }\n\n  function inside(code) {\n    if (asciiDigit(code) && ++size < 10) {\n      effects.consume(code)\n      return inside\n    }\n\n    if (\n      (!self.interrupt || size < 2) &&\n      (self.containerState.marker\n        ? code === self.containerState.marker\n        : code === 41 || code === 46)\n    ) {\n      effects.exit('listItemValue')\n      return atMarker(code)\n    }\n\n    return nok(code)\n  }\n\n  function atMarker(code) {\n    effects.enter('listItemMarker')\n    effects.consume(code)\n    effects.exit('listItemMarker')\n    self.containerState.marker = self.containerState.marker || code\n    return effects.check(\n      partialBlankLine, // Can’t be empty when interrupting.\n      self.interrupt ? nok : onBlank,\n      effects.attempt(\n        listItemPrefixWhitespaceConstruct,\n        endOfPrefix,\n        otherPrefix\n      )\n    )\n  }\n\n  function onBlank(code) {\n    self.containerState.initialBlankLine = true\n    initialSize++\n    return endOfPrefix(code)\n  }\n\n  function otherPrefix(code) {\n    if (markdownSpace(code)) {\n      effects.enter('listItemPrefixWhitespace')\n      effects.consume(code)\n      effects.exit('listItemPrefixWhitespace')\n      return endOfPrefix\n    }\n\n    return nok(code)\n  }\n\n  function endOfPrefix(code) {\n    self.containerState.size =\n      initialSize + sizeChunks(self.sliceStream(effects.exit('listItemPrefix')))\n    return ok(code)\n  }\n}\n\nfunction tokenizeListContinuation(effects, ok, nok) {\n  var self = this\n  self.containerState._closeFlow = undefined\n  return effects.check(partialBlankLine, onBlank, notBlank)\n\n  function onBlank(code) {\n    self.containerState.furtherBlankLines =\n      self.containerState.furtherBlankLines ||\n      self.containerState.initialBlankLine // We have a blank line.\n    // Still, try to consume at most the items size.\n\n    return factorySpace(\n      effects,\n      ok,\n      'listItemIndent',\n      self.containerState.size + 1\n    )(code)\n  }\n\n  function notBlank(code) {\n    if (self.containerState.furtherBlankLines || !markdownSpace(code)) {\n      self.containerState.furtherBlankLines = self.containerState.initialBlankLine = undefined\n      return notInCurrentItem(code)\n    }\n\n    self.containerState.furtherBlankLines = self.containerState.initialBlankLine = undefined\n    return effects.attempt(indentConstruct, ok, notInCurrentItem)(code)\n  }\n\n  function notInCurrentItem(code) {\n    // While we do continue, we signal that the flow should be closed.\n    self.containerState._closeFlow = true // As we’re closing flow, we’re no longer interrupting.\n\n    self.interrupt = undefined\n    return factorySpace(\n      effects,\n      effects.attempt(list, ok, nok),\n      'linePrefix',\n      self.parser.constructs.disable.null.indexOf('codeIndented') > -1\n        ? undefined\n        : 4\n    )(code)\n  }\n}\n\nfunction tokenizeIndent(effects, ok, nok) {\n  var self = this\n  return factorySpace(\n    effects,\n    afterPrefix,\n    'listItemIndent',\n    self.containerState.size + 1\n  )\n\n  function afterPrefix(code) {\n    return prefixSize(self.events, 'listItemIndent') ===\n      self.containerState.size\n      ? ok(code)\n      : nok(code)\n  }\n}\n\nfunction tokenizeListEnd(effects) {\n  effects.exit(this.containerState.type)\n}\n\nfunction tokenizeListItemPrefixWhitespace(effects, ok, nok) {\n  var self = this\n  return factorySpace(\n    effects,\n    afterPrefix,\n    'listItemPrefixWhitespace',\n    self.parser.constructs.disable.null.indexOf('codeIndented') > -1\n      ? undefined\n      : 4 + 1\n  )\n\n  function afterPrefix(code) {\n    return markdownSpace(code) ||\n      !prefixSize(self.events, 'listItemPrefixWhitespace')\n      ? nok(code)\n      : ok(code)\n  }\n}\n\nmodule.exports = list\n","'use strict'\n\nvar markdownLineEnding = require('../character/markdown-line-ending.js')\nvar shallow = require('../util/shallow.js')\nvar factorySpace = require('./factory-space.js')\n\nvar setextUnderline = {\n  name: 'setextUnderline',\n  tokenize: tokenizeSetextUnderline,\n  resolveTo: resolveToSetextUnderline\n}\n\nfunction resolveToSetextUnderline(events, context) {\n  var index = events.length\n  var content\n  var text\n  var definition\n  var heading // Find the opening of the content.\n  // It’ll always exist: we don’t tokenize if it isn’t there.\n\n  while (index--) {\n    if (events[index][0] === 'enter') {\n      if (events[index][1].type === 'content') {\n        content = index\n        break\n      }\n\n      if (events[index][1].type === 'paragraph') {\n        text = index\n      }\n    } // Exit\n    else {\n      if (events[index][1].type === 'content') {\n        // Remove the content end (if needed we’ll add it later)\n        events.splice(index, 1)\n      }\n\n      if (!definition && events[index][1].type === 'definition') {\n        definition = index\n      }\n    }\n  }\n\n  heading = {\n    type: 'setextHeading',\n    start: shallow(events[text][1].start),\n    end: shallow(events[events.length - 1][1].end)\n  } // Change the paragraph to setext heading text.\n\n  events[text][1].type = 'setextHeadingText' // If we have definitions in the content, we’ll keep on having content,\n  // but we need move it.\n\n  if (definition) {\n    events.splice(text, 0, ['enter', heading, context])\n    events.splice(definition + 1, 0, ['exit', events[content][1], context])\n    events[content][1].end = shallow(events[definition][1].end)\n  } else {\n    events[content][1] = heading\n  } // Add the heading exit at the end.\n\n  events.push(['exit', heading, context])\n  return events\n}\n\nfunction tokenizeSetextUnderline(effects, ok, nok) {\n  var self = this\n  var index = self.events.length\n  var marker\n  var paragraph // Find an opening.\n\n  while (index--) {\n    // Skip enter/exit of line ending, line prefix, and content.\n    // We can now either have a definition or a paragraph.\n    if (\n      self.events[index][1].type !== 'lineEnding' &&\n      self.events[index][1].type !== 'linePrefix' &&\n      self.events[index][1].type !== 'content'\n    ) {\n      paragraph = self.events[index][1].type === 'paragraph'\n      break\n    }\n  }\n\n  return start\n\n  function start(code) {\n    if (!self.lazy && (self.interrupt || paragraph)) {\n      effects.enter('setextHeadingLine')\n      effects.enter('setextHeadingLineSequence')\n      marker = code\n      return closingSequence(code)\n    }\n\n    return nok(code)\n  }\n\n  function closingSequence(code) {\n    if (code === marker) {\n      effects.consume(code)\n      return closingSequence\n    }\n\n    effects.exit('setextHeadingLineSequence')\n    return factorySpace(effects, closingSequenceEnd, 'lineSuffix')(code)\n  }\n\n  function closingSequenceEnd(code) {\n    if (code === null || markdownLineEnding(code)) {\n      effects.exit('setextHeadingLine')\n      return ok(code)\n    }\n\n    return nok(code)\n  }\n}\n\nmodule.exports = setextUnderline\n","'use strict'\n\nvar search = /[\\0\\t\\n\\r]/g\n\nfunction preprocess() {\n  var start = true\n  var column = 1\n  var buffer = ''\n  var atCarriageReturn\n  return preprocessor\n\n  function preprocessor(value, encoding, end) {\n    var chunks = []\n    var match\n    var next\n    var startPosition\n    var endPosition\n    var code\n    value = buffer + value.toString(encoding)\n    startPosition = 0\n    buffer = ''\n\n    if (start) {\n      if (value.charCodeAt(0) === 65279) {\n        startPosition++\n      }\n\n      start = undefined\n    }\n\n    while (startPosition < value.length) {\n      search.lastIndex = startPosition\n      match = search.exec(value)\n      endPosition = match ? match.index : value.length\n      code = value.charCodeAt(endPosition)\n\n      if (!match) {\n        buffer = value.slice(startPosition)\n        break\n      }\n\n      if (code === 10 && startPosition === endPosition && atCarriageReturn) {\n        chunks.push(-3)\n        atCarriageReturn = undefined\n      } else {\n        if (atCarriageReturn) {\n          chunks.push(-5)\n          atCarriageReturn = undefined\n        }\n\n        if (startPosition < endPosition) {\n          chunks.push(value.slice(startPosition, endPosition))\n          column += endPosition - startPosition\n        }\n\n        if (code === 0) {\n          chunks.push(65533)\n          column++\n        } else if (code === 9) {\n          next = Math.ceil(column / 4) * 4\n          chunks.push(-2)\n\n          while (column++ < next) chunks.push(-1)\n        } else if (code === 10) {\n          chunks.push(-4)\n          column = 1\n        } // Must be carriage return.\n        else {\n          atCarriageReturn = true\n          column = 1\n        }\n      }\n\n      startPosition = endPosition + 1\n    }\n\n    if (end) {\n      if (atCarriageReturn) chunks.push(-5)\n      if (buffer) chunks.push(buffer)\n      chunks.push(null)\n    }\n\n    return chunks\n  }\n}\n\nmodule.exports = preprocess\n","'use strict'\n\nvar subtokenize = require('./util/subtokenize.js')\n\nfunction postprocess(events) {\n  while (!subtokenize(events)) {\n    // Empty\n  }\n\n  return events\n}\n\nmodule.exports = postprocess\n"],"sourceRoot":""}